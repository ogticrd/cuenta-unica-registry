{"version":3,"file":"tf-backend-wasm.min.js","sources":["../src/kernels/types.ts","../src/kernels/_FusedMatMul.ts","../src/kernels/unary_kernel.ts","../src/kernels/Abs.ts","../src/kernels/binary_kernel.ts","../src/kernels/Add.ts","../src/kernels/AddN.ts","../src/kernels/Identity.ts","../src/kernels/Transpose.ts","../src/kernels/All.ts","../src/kernels/kernel_utils.ts","../src/kernels/Any.ts","../src/kernels/ArgMax.ts","../src/kernels/AvgPool.ts","../src/kernels/Reshape.ts","../src/kernels/BatchMatMul.ts","../src/kernels/Cast.ts","../src/kernels/ClipByValue.ts","../src/kernels/Ceil.ts","../node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js","../src/kernels/Concat.ts","../node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat_impl.js","../src/kernels/Conv2D.ts","../src/kernels/Conv2DBackpropInput.ts","../src/kernels/CropAndResize.ts","../src/kernels/Cos.ts","../src/kernels/Cumsum.ts","../src/kernels/DepthToSpace.ts","../src/kernels/DepthwiseConv2dNative.ts","../src/kernels/Equal.ts","../src/kernels/Exp.ts","../src/kernels/ExpandDims.ts","../src/kernels/Fill.ts","../src/kernels/FlipLeftRight.ts","../src/kernels/FusedBatchNorm.ts","../src/kernels/Floor.ts","../src/kernels/FloorDiv.ts","../src/kernels/FusedConv2D.ts","../src/kernels/FusedDepthwiseConv2D.ts","../src/kernels/GatherNd.ts","../src/kernels/GatherV2.ts","../src/kernels/LeakyRelu.ts","../src/kernels/Greater.ts","../src/kernels/GreaterEqual.ts","../src/kernels/Max.ts","../src/kernels/Less.ts","../src/kernels/LessEqual.ts","../src/kernels/Log.ts","../src/kernels/LogicalAnd.ts","../src/kernels/MaxPool.ts","../src/kernels/Maximum.ts","../src/kernels/Mean.ts","../src/kernels/Min.ts","../src/kernels/MirrorPad.ts","../src/kernels/Minimum.ts","../src/kernels/NonMaxSuppressionV3.ts","../src/kernels/Multiply.ts","../src/kernels/Neg.ts","../src/kernels/NonMaxSuppression_util.ts","../src/kernels/NonMaxSuppressionV4.ts","../src/kernels/NonMaxSuppressionV5.ts","../src/kernels/OneHot.ts","../src/kernels/NotEqual.ts","../src/kernels/OnesLike.ts","../src/kernels/Pack.ts","../src/kernels/PadV2.ts","../src/kernels/Prelu.ts","../src/kernels/Pow.ts","../src/kernels/Prod.ts","../src/kernels/ResizeBilinear.ts","../src/kernels/Range.ts","../node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range_impl.js","../src/kernels/RealDiv.ts","../src/kernels/Relu.ts","../src/kernels/Relu6.ts","../src/kernels/Reverse.ts","../src/kernels/RotateWithOffset.ts","../src/kernels/ScatterNd.ts","../src/kernels/Select.ts","../src/kernels/Sigmoid.ts","../src/kernels/Softmax.ts","../src/kernels/Round.ts","../src/kernels/Slice.ts","../src/kernels/SplitV.ts","../src/kernels/Step.ts","../src/kernels/StridedSlice.ts","../src/kernels/Sum.ts","../src/kernels/Tile.ts","../src/kernels/TopK.ts","../src/register_all_kernels.ts","../src/kernels/ZerosLike.ts","../src/kernels/Rsqrt.ts","../src/kernels/Sin.ts","../src/kernels/Sqrt.ts","../src/kernels/Square.ts","../src/kernels/SquaredDifference.ts","../src/kernels/Sub.ts","../src/kernels/Tan.ts","../src/kernels/Tanh.ts","../src/kernels/Unpack.ts","../src/flags_wasm.ts","../wasm-out/tfjs-backend-wasm-threaded-simd.js","../wasm-out/tfjs-backend-wasm.js","../src/backend_wasm.ts","../wasm-out/tfjs-backend-wasm-threaded-simd.worker.js","../src/base.ts","../src/version.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// This enum must align with the enum defined in cc/backend.h.\nexport enum CppDType {\n  float32 = 0,\n  int32 = 1,\n  bool = 2,\n  string = 3,\n  complex64 = 4\n}\n\n// Must match enum in cc/fusable_activations.h.\nexport enum FusableActivation {\n  linear = 0,\n  relu = 1,\n  relu6 = 2,\n  prelu = 3,\n  leakyrelu = 4,\n  sigmoid = 5\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {_FusedMatMul, _FusedMatMulAttrs, _FusedMatMulInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedMatMul:\n    (aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n     bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n     transposeB: boolean, activation: number, biasId: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedMatMul = backend.wasm.cwrap(_FusedMatMul, null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number',  // activation\n    'number',  // biasId\n    'number',  // preluActivationWeightsId\n    'number',  // leakyreluAlpha\n    'number'   // out_id\n  ]);\n}\n\nfunction fusedBatchMatMul(args: {\n  inputs: _FusedMatMulInputs,\n  backend: BackendWasm,\n  attrs: _FusedMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b, bias, preluActivationWeights} = inputs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `_FusedMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const {transposeA, transposeB, activation, leakyreluAlpha} = attrs;\n  const aId = backend.dataIdMap.get(a.dataId).id;\n  const bId = backend.dataIdMap.get(b.dataId).id;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `_FusedMatMul only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    biasId = biasData.id;\n  }\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const leftDim = transposeA ? a.shape[2] : a.shape[1];\n  const rightDim = transposeB ? b.shape[1] : b.shape[2];\n  const batchDim = a.shape[0];\n\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n\n  wasmFusedMatMul(\n      aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n      transposeA, transposeB, fusedActivation, biasId, preluActivationWeightsId,\n      leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const fusedMatMulConfig: KernelConfig = {\n  kernelName: _FusedMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchMatMul as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, TensorInfo, UnaryInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function createUnaryKernelConfig(kernelName: string): KernelConfig {\n  let wasmFunc: (xId: number, outId: number) => void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc =\n        backend.wasm.cwrap(kernelName, null /* void */, ['number', 'number']);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: UnaryInputs}):\n      TensorInfo {\n    const {backend, inputs: {x}} = args;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(out.shape) === 0) {\n      return out;\n    }\n\n    wasmFunc(xId, outId);\n    return out;\n  }\n\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Abs, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const absConfig: KernelConfig = createUnaryKernelConfig(Abs);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BinaryInputs, DataType, KernelConfig, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nexport function createBinaryKernelConfig(\n    kernelName: string, supportsFullBroadcast: boolean,\n    dtype?: DataType): KernelConfig {\n  let wasmFunc:\n      (aId: number, aShape: Uint8Array, aShapeLen: number, bId: number,\n       bShape: Uint8Array, bShapeLen: number, dtype: number, outId: number) =>\n          void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // a_id,\n      'array',   // a_shape\n      'number',  // a_shape.length\n      'number',  // b_id\n      'array',   // b_shape\n      'number',  // b_shape.length\n      'number',  // dtype\n      'number'   // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: BinaryInputs}):\n      TensorInfo {\n    const {backend, inputs} = args;\n    const {a, b} = inputs;\n    const aId = backend.dataIdMap.get(a.dataId).id;\n    const bId = backend.dataIdMap.get(b.dataId).id;\n\n    const outputType = dtype != null ? dtype : a.dtype;\n    const newShape = backend_util.assertAndGetBroadcastShape(a.shape, b.shape);\n    const out = backend.makeOutput(newShape, outputType);\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(newShape) === 0) {\n      return out;\n    }\n\n    const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n    const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const kernelFunc = () => wasmFunc(\n        aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n        CppDType[a.dtype], outId);\n\n    // Currently only some float operations support full broadcast.\n    if (supportsFullBroadcast && a.dtype === 'float32') {\n      kernelFunc();\n      return out;\n    }\n\n    const aBroadcastDims = backend_util.getBroadcastDims(a.shape, newShape);\n    const bBroadcastDims = backend_util.getBroadcastDims(b.shape, newShape);\n    const loopsOverAllOfA = aBroadcastDims.every((v, i) => v === i);\n    const loopsOverAllOfB = bBroadcastDims.every((v, i) => v === i);\n    if (loopsOverAllOfA && loopsOverAllOfB) {\n      kernelFunc();\n      return out;\n    } else {\n      throw new Error(\n          `Broadcasting along outer dims is not yet ` +\n          `supported for ${a.dtype} ${kernelName}.`);\n    }\n  }\n\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Add, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\n\nexport const addConfig: KernelConfig =\n    createBinaryKernelConfig(Add, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AddN, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmFunc:\n    (inputIds: Uint8Array, inputIdsLen: number, dtype: number, outId: number) =>\n        void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(AddN, null /* void */, [\n    'array',   // input_ids\n    'number',  // input_ids.length\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction addn(args: {inputs: TensorInfo[], backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const out = backend.makeOutput(inputs[0].shape, inputs[0].dtype);\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  const inputIds = inputs.map(x => backend.dataIdMap.get(x.dataId).id);\n  const inputIdsBytes = new Uint8Array(new Int32Array(inputIds).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmFunc(inputIdsBytes, inputIds.length, CppDType[out.dtype], outId);\n\n  return out;\n}\n\nexport const addNConfig: KernelConfig = {\n  kernelName: AddN,\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: addn as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Identity, IdentityInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function identity(args: {inputs: IdentityInputs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const identityConfig: KernelConfig = {\n  kernelName: Identity,\n  backendName: 'wasm',\n  kernelFunc: identity as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Transpose, TransposeAttrs, TransposeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {identity} from './Identity';\nimport {CppDType} from './types';\n\nlet wasmTranspose: (\n    xId: number, xShape: Uint8Array, xShapeLength: number, dtype: CppDType,\n    outId: number, perm: Uint8Array, permLength: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTranspose = backend.wasm.cwrap(Transpose, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // dtype\n    'number',  // outId\n    'array',   // perm\n    'number',  // perm.length\n  ]);\n}\n\nexport function transpose(\n    args:\n        {inputs: TransposeInputs, backend: BackendWasm, attrs: TransposeAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  // Reduce any dimensions with size one. Lower-rank transpose kernel performs\n  // better due to simpler memory access pattern.\n  const [reducedShape, perm] = removeOneSizeDims(inputs.x.shape, attrs.perm);\n\n  let permIsNoOp = true;\n  for (let i = 0; i < perm.length; i++) {\n    if (perm[i] !== i) {\n      permIsNoOp = false;\n    }\n  }\n  const outShape = computeOutShape(inputs.x.shape, attrs.perm);\n  const x = {\n    dataId: inputs.x.dataId,\n    shape: reducedShape,\n    dtype: inputs.x.dtype\n  };\n\n  if (permIsNoOp) {\n    const cloned = identity({inputs, backend});\n    cloned.shape = outShape;\n    return cloned;\n  }\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const permBytes = new Uint8Array(new Int32Array(perm).buffer);\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmTranspose(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], outId, permBytes,\n      perm.length);\n  return out;\n}\n\nfunction computeOutShape(inShape: number[], perm: number[]): number[] {\n  const outShape = new Array(inShape.length);\n  for (let i = 0; i < outShape.length; i++) {\n    outShape[i] = inShape[perm[i]];\n  }\n  return outShape;\n}\n\nfunction removeOneSizeDims(\n    shape: number[], perm: number[]): [number[], number[]] {\n  const newShape: number[] = [];\n  const newPerm: number[] = [];\n  for (let i = 0; i < shape.length; ++i) {\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n    }\n    if (shape[perm[i]] !== 1) {\n      newPerm.push(perm[i]);\n    }\n  }\n  for (let i = 0; i < newPerm.length; ++i) {\n    let minValIdx = -1;\n    for (let j = 0; j < newPerm.length; ++j) {\n      if (newPerm[j] >= i &&\n          (minValIdx === -1 || newPerm[minValIdx] > newPerm[j])) {\n        minValIdx = j;\n      }\n    }\n    newPerm[minValIdx] = i;\n  }\n  return [newShape, newPerm];\n}\n\nexport const transposeConfig: KernelConfig = {\n  kernelName: Transpose,\n  backendName: 'wasm',\n  kernelFunc: transpose as {} as KernelFunc,\n  setupFunc: setup,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {All, AllAttrs, AllInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmAll: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmAll = backend.wasm.cwrap(All, null /*void*/, ['number, number, number']);\n}\n\nfunction all(args: {backend: BackendWasm, inputs: AllInputs, attrs: AllAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('all', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAll(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const allConfig: KernelConfig = {\n  kernelName: All,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: all as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\nimport {transpose} from './Transpose';\n\n/**\n * Compute permutation axes and do a transpose if necessary.\n *\n * Used by reduction ops.\n * @param x input TensorInfo\n * @param axis reduction axes\n * @param backend wasm backend instance\n */\nexport function permuteAxesAndTranspose(\n    x: TensorInfo, axis: number|number[], backend: BackendWasm): {\n  transposed: TensorInfo|null,\n  axes: number[],\n  originalAxes: number[],\n  inputWasTransposed: boolean\n} {\n  const xShape = x.shape;\n  const xRank = x.shape.length;\n\n  const originalAxes = util.parseAxisParam(axis, xShape);\n  let axes = originalAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  let xTransposed = null;\n  let inputWasTransposed = false;\n  if (permutedAxes != null) {\n    const newShape: number[] = new Array(xRank);\n    for (let i = 0; i < newShape.length; i++) {\n      newShape[i] = xShape[permutedAxes[i]];\n    }\n\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    xTransposed =\n        transpose({inputs: {x}, attrs: {perm: permutedAxes}, backend});\n\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const transposedId = backend.dataIdMap.get(xTransposed.dataId).id;\n    if (transposedId !== xId) {\n      inputWasTransposed = true;\n    }\n  }\n\n  return {transposed: xTransposed, originalAxes, axes, inputWasTransposed};\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Any, AnyAttrs, AnyInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmAny: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmAny = backend.wasm.cwrap(Any, null /*void*/, ['number, number, number']);\n}\n\nfunction any(args: {backend: BackendWasm, inputs: AnyInputs, attrs: AnyAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('any', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAny(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const anyConfig: KernelConfig = {\n  kernelName: Any,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: any as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ArgMax, ArgMaxAttrs, ArgMaxInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmFunc: (\n    xId: number, dtype: number, outerSize: number, innerSize: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFunc = backend.wasm.cwrap(ArgMax, null /* void */, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // outer_size\n    'number',  // inner_size\n    'number'   // out_id\n  ]);\n}\n\nfunction argmax(\n    args: {inputs: ArgMaxInputs, backend: BackendWasm, attrs: ArgMaxAttrs}) {\n  const {backend, inputs, attrs} = args;\n  const {axis} = attrs as {} as ArgMaxAttrs;\n  const {x} = inputs as {} as ArgMaxInputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n    }\n  }\n\n  const outShape = input.shape.slice(0, -1);\n  const out = backend.makeOutput(outShape, 'int32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const outerSize = util.sizeFromShape(out.shape);\n  const innerSize = input.shape[axes[0]];\n  wasmFunc(inputId, CppDType[input.dtype], outerSize, innerSize, outId);\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  return out;\n}\n\nexport const argMaxConfig: KernelConfig = {\n  kernelName: ArgMax,\n  backendName: 'wasm',\n  kernelFunc: argmax as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AvgPool, AvgPoolAttrs, AvgPoolInputs, backend_util, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmAvgPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, strideHeight: number,\n    strideWidth: number, channels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmAvgPool = backend.wasm.cwrap(AvgPool, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // channels\n    'number',  // outId\n  ]);\n}\n\nfunction avgPool(\n    args: {inputs: AvgPoolInputs, backend: BackendWasm, attrs: AvgPoolAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const x = inputs.x as Tensor4D;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const channels = convInfo.inChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  if (convInfo.dilationWidth !== 1 || convInfo.dilationHeight !== 1) {\n    throw new Error(\n        `was backend only supports average pooling with dilation = [1, 1], ` +\n        `got [${convInfo.dilationHeight}, ${convInfo.dilationWidth}].`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmAvgPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, strideHeight, strideWidth, channels,\n      outId);\n  return out;\n}\n\nexport const avgPoolConfig: KernelConfig = {\n  kernelName: AvgPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, NamedAttrMap, NamedTensorInfoMap, Reshape, ReshapeAttrs, ReshapeInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function reshape(args: {\n  inputs: NamedTensorInfoMap,\n  attrs: NamedAttrMap,\n  backend: BackendWasm\n}) {\n  const {inputs, attrs} = args;\n  const {x} = inputs as {} as ReshapeInputs;\n  const {shape} = attrs as {} as ReshapeAttrs;\n\n  const xSize = util.sizeFromShape(x.shape);\n  const $shape = util.inferFromImplicitShape(shape, xSize);\n\n  util.assert(\n      xSize === util.sizeFromShape($shape),\n      () => `new shape: ${$shape}, old shape: ${x.shape}. New shape and old ` +\n          `shape must have the same number of elements.`);\n\n  // Backend needs to track refCount for the dataId for reshape op\n  args.backend.incRef(x.dataId);\n  return {dataId: x.dataId, shape: $shape, dtype: x.dtype};\n}\n\nexport const reshapeConfig: KernelConfig = {\n  kernelName: Reshape,\n  backendName: 'wasm',\n  kernelFunc: reshape,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BatchMatMul, BatchMatMulAttrs, BatchMatMulInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\n\nlet wasmBatchMatMul: (\n    aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n    bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n    transposeB: boolean, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmBatchMatMul = backend.wasm.cwrap(BatchMatMul, null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number'   // out_id\n  ]);\n}\n\nfunction batchMatMul(args: {\n  inputs: BatchMatMulInputs,\n  backend: BackendWasm,\n  attrs: BatchMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b} = inputs;\n  const {transposeA, transposeB} = attrs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `BatchMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const aRank = a.shape.length;\n  const bRank = b.shape.length;\n\n  const innerShapeA = transposeA ? a.shape[aRank - 2] : a.shape[aRank - 1];\n  const innerShapeB = transposeB ? b.shape[bRank - 1] : b.shape[bRank - 2];\n\n  const outerShapeA = transposeA ? a.shape[aRank - 1] : a.shape[aRank - 2];\n  const outerShapeB = transposeB ? b.shape[bRank - 2] : b.shape[bRank - 1];\n\n  const outerDimsA = a.shape.slice(0, -2);\n  const outerDimsB = b.shape.slice(0, -2);\n\n  const batchDimA = util.sizeFromShape(outerDimsA);\n  const batchDimB = util.sizeFromShape(outerDimsB);\n\n  const batchDimsCompatible =\n      batchDimA === batchDimB || batchDimA === 1 || batchDimB === 1;\n\n  util.assert(\n      aRank >= 2 && bRank >= 2 && batchDimsCompatible,\n      () => `Error in matMul: the input batch dimensions must either be the ` +\n          `same or at least one input batch dimension must be 1. Got input ` +\n          `batch dimensions of (${outerDimsA}) and (${outerDimsB}).`);\n\n  const outShapeOuterDims =\n      batchDimA > batchDimB ? a.shape.slice(0, -2) : b.shape.slice(0, -2);\n  const outShape = outShapeOuterDims.concat([outerShapeA, outerShapeB]);\n\n  util.assert(\n      innerShapeA === innerShapeB,\n      () => `Error in matMul: inner shapes (${innerShapeA}) and (` +\n          `${innerShapeB}) of Tensors with shapes ${a.shape} and ` +\n          `${b.shape} and transposeA=${transposeA}` +\n          ` and transposeB=${transposeB} must match.`);\n\n  const a3dShape = transposeA ? [batchDimA, innerShapeA, outerShapeA] :\n                                [batchDimA, outerShapeA, innerShapeA];\n  const b3dShape = transposeB ? [batchDimB, outerShapeB, innerShapeB] :\n                                [batchDimB, innerShapeB, outerShapeB];\n\n  // The rest of the implementation is designed to operate on rank-3 tensors\n  const a3d = reshape({inputs: {x: a}, backend, attrs: {shape: a3dShape}});\n  const b3d = reshape({inputs: {x: b}, backend, attrs: {shape: b3dShape}});\n\n  const a3dId = backend.dataIdMap.get(a3d.dataId).id;\n  const b3dId = backend.dataIdMap.get(b3d.dataId).id;\n\n  const leftDim = transposeA ? a3d.shape[2] : a3d.shape[1];\n  const rightDim = transposeB ? b3d.shape[1] : b3d.shape[2];\n  const batchDim = Math.max(batchDimA, batchDimB);\n\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a3d.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a3d.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b3d.shape).buffer);\n\n  wasmBatchMatMul(\n      a3dId, aShapeBytes, a3d.shape.length, b3dId, bShapeBytes,\n      b3d.shape.length, transposeA, transposeB, outId);\n\n  backend.disposeData(a3d.dataId);\n  backend.disposeData(b3d.dataId);\n\n  out.shape = outShape;\n  return out;\n}\n\nexport const batchMatMulConfig: KernelConfig = {\n  kernelName: BatchMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: batchMatMul as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cast, CastAttrs, CastInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function cast(\n    args: {inputs: CastInputs, attrs: CastAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {dtype}, backend} = args;\n  const out = backend.makeOutput(x.shape, dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const castConfig: KernelConfig = {\n  kernelName: Cast,\n  backendName: 'wasm',\n  kernelFunc: cast as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ClipByValue, ClipByValueAttrs, ClipByValueInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmClip: (xId: number, min: number, max: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmClip = backend.wasm.cwrap(ClipByValue, null /* void */, [\n    'number',  // x_id\n    'number',  // min\n    'number',  // max\n    'number'   // out_id\n  ]);\n}\n\nfunction clip(args: {\n  inputs: ClipByValueInputs,\n  backend: BackendWasm,\n  attrs: ClipByValueAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {clipValueMin, clipValueMax} = attrs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmClip(xId, clipValueMin, clipValueMax, outId);\n  return out;\n}\n\nexport const clipByValueConfig: KernelConfig = {\n  kernelName: ClipByValue,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: clip as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Ceil} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const ceilConfig: KernelConfig = createUnaryKernelConfig(Ceil);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, buffer, Slice, slice_util, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function sliceImpl(vals, begin, size, shape, dtype) {\n    const isContinous = slice_util.isSliceContinous(shape, begin, size);\n    const length = util.sizeFromShape(size);\n    const xStrides = util.computeStrides(shape);\n    if (isContinous) {\n        const flatOffset = slice_util.computeFlatOffset(begin, xStrides);\n        if (dtype === 'string') {\n            return vals.slice(flatOffset, flatOffset + length);\n        }\n        return vals.subarray(flatOffset, flatOffset + length);\n    }\n    const decodedData = dtype === 'string' ?\n        backend_util.fromUint8ToStringArray(vals) :\n        vals;\n    const inBuf = buffer(shape, dtype, decodedData);\n    const outBuf = buffer(size, dtype);\n    for (let i = 0; i < outBuf.size; ++i) {\n        const outLoc = outBuf.indexToLoc(i);\n        const inLoc = outLoc.map((idx, j) => idx + begin[j]);\n        outBuf.set(inBuf.get(...inLoc), ...outLoc);\n    }\n    if (dtype === 'string') {\n        return backend_util.fromStringArrayToUint8(outBuf.values);\n    }\n    return outBuf.values;\n}\nexport function slice(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { begin, size } = attrs;\n    assertNotComplex(x, 'slice');\n    const [$begin, $size] = slice_util.parseSliceParams(x, begin, size);\n    slice_util.assertParamsValid(x, $begin, $size);\n    const vals = backend.data.get(x.dataId).values;\n    const outVals = sliceImpl(vals, $begin, $size, x.shape, x.dtype);\n    return backend.makeTensorInfo($size, x.dtype, outVals);\n}\nexport const sliceConfig = {\n    kernelName: Slice,\n    backendName: 'cpu',\n    kernelFunc: slice\n};\n//# sourceMappingURL=Slice.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Concat, ConcatAttrs, ConcatInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {concatImplCPU} from '../kernel_utils/shared';\nimport {identity} from './Identity';\nimport {reshape} from './Reshape';\n\nexport function concat(\n    args: {inputs: ConcatInputs, backend: BackendWasm, attrs: ConcatAttrs}) {\n  const {inputs, backend} = args;\n\n  const axis = util.parseAxisParam(args.attrs.axis, inputs[0].shape)[0];\n\n  let outShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n\n  // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n  const $inputs = inputs.filter(t => util.sizeFromShape(t.shape) > 0);\n  if ($inputs.length === 1) {\n    return identity({inputs: {x: $inputs[0]}, backend});\n  }\n\n  const out = backend.makeOutput(outShape, inputs[0].dtype);\n\n  if (util.sizeFromShape(outShape) === 0) {\n    return out;\n  }\n\n  const shapes = $inputs.map(t => t.shape);\n  backend_util.assertParamsConsistent(shapes, axis);\n\n  if ($inputs[0].dtype === 'string') {\n    // Any concat of n-dimensional tensors across any axis can be reduced to\n    // a concatenation of two-dimensional tensors across the axis 1 by first\n    // partitioning the axes of the original tensors into those less than the\n    // axis to be concatenated and the rest. Then reshape the tensors\n    // into a two-dimensional tensor by collapsing these two sets of axes and\n    // concatenate the resulting matrices across the axis 1, finally reshaping\n    // the result to have the proper shape.\n    const inputs2D = $inputs.map(t => {\n      const innerSize = util.sizeFromShape(t.shape.slice(axis));\n      const shape = [-1, innerSize];\n      return reshape({inputs: {x: t}, backend, attrs: {shape}});\n    });\n\n    const inputsValShapes = inputs2D.map(t => {\n      return {vals: backend.readSync(t.dataId), shape: t.shape};\n    });\n\n    // Concats 2d tensors along axis=1.\n    outShape =\n        backend_util.computeOutShape(inputs2D.map(t => t.shape), 1 /* axis */);\n    const simplyConcat = inputs2D[0].shape[0] === 1;\n    const outVals = concatImplCPU(\n                        inputsValShapes, outShape, inputs[0].dtype,\n                        simplyConcat) as string[];\n\n    const finalOutShape =\n        backend_util.computeOutShape($inputs.map(t => t.shape), axis);\n\n    out.shape = finalOutShape;\n    const outData = backend.dataIdMap.get(out.dataId);\n    outData.stringBytes = backend_util.fromStringArrayToUint8(outVals);\n\n    inputs2D.forEach(t => backend.disposeData(t.dataId));\n\n    return out;\n  }\n\n  const batchDim = util.sizeFromShape($inputs[0].shape.slice(0, axis));\n  let sumInnerDims = 0;\n  const innerDims = $inputs.map(input => {\n    const innerDim = util.sizeFromShape(input.shape.slice(axis));\n    sumInnerDims += innerDim;\n    return innerDim;\n  });\n  const inVals = $inputs.map(input => backend.typedArrayFromHeap(input));\n  const outVals = backend.typedArrayFromHeap(out);\n  for (let b = 0; b < batchDim; b++) {\n    let outOffset = b * sumInnerDims;\n    for (let i = 0; i < inVals.length; i++) {\n      const innerDim = innerDims[i];\n      const inOffset = b * innerDim;\n      const vals = inVals[i].subarray(inOffset, inOffset + innerDim);\n      outVals.set(vals, outOffset);\n      outOffset += innerDim;\n    }\n  }\n  return out;\n}\n\nexport const concatConfig: KernelConfig = {\n  kernelName: Concat,\n  backendName: 'wasm',\n  kernelFunc: concat as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nexport function concatImpl(inputs, outShape, dtype, simplyConcat) {\n    const outVals = util.getArrayFromDType(dtype, util.sizeFromShape(outShape));\n    if (simplyConcat && dtype !== 'string') {\n        // Use built-in TypedArray.set() method for speed.\n        let offset = 0;\n        inputs.forEach(input => {\n            const size = util.sizeFromShape(input.shape);\n            outVals.set(input.vals, offset);\n            offset += size;\n        });\n    }\n    else {\n        let colOffset = 0;\n        inputs.forEach(input => {\n            const decodedData = dtype === 'string' ?\n                backend_util.fromUint8ToStringArray(input.vals) :\n                input.vals;\n            let tIdx = 0;\n            for (let row = 0; row < input.shape[0]; ++row) {\n                const resIdx = row * outShape[1] + colOffset;\n                for (let col = 0; col < input.shape[1]; ++col) {\n                    outVals[resIdx + col] = decodedData[tIdx++];\n                }\n            }\n            colOffset += input.shape[1];\n        });\n    }\n    return outVals;\n}\n//# sourceMappingURL=Concat_impl.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2D, Conv2DAttrs, Conv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmConv2d = backend.wasm.cwrap(Conv2D, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction conv2d(\n    args: {inputs: Conv2DInputs, backend: BackendWasm, attrs: Conv2DAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode, dataFormat} = attrs;\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode, false, $dataFormat);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend Conv2D does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nexport const conv2DConfig: KernelConfig = {\n  kernelName: Conv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2DBackpropInput, Conv2DBackpropInputAttrs, Conv2DBackpropInputInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv2DBackpropInput: (\n    dyId: number, filterId: number, batchSize: number, filterHeight: number,\n    filterWidth: number, inHeight: number, inWidth: number, inChannels: number,\n    outHeight: number, outWidth: number, outChannels: number,\n    strideHeight: number, strideWidth: number, topPad: number, leftPad: number,\n    fltS0: number, fltS1: number, fltS2: number, xBatchStride: number,\n    xRowStride: number, xColStride: number, xChannelStride: number,\n    yBatchStride: number, yRowStride: number, yColStride: number,\n    yChannelStride: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmConv2DBackpropInput = backend.wasm.cwrap(Conv2DBackpropInput, null, [\n    'number',  // dyId\n    'number',  // filterId\n    'number',  // batchSize\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // inChannels\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // outChannels\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // topPad\n    'number',  // leftPad\n    'number',  // fltS0\n    'number',  // fltS1\n    'number',  // fltS2\n    'number',  // xBatchStride\n    'number',  // xRowStride\n    'number',  // xColStride\n    'number',  // xChannelStride\n    'number',  // yBatchStride\n    'number',  // yRowStride\n    'number',  // yColStride\n    'number',  // yChannelStride\n    'number',  // outId\n  ]);\n}\n\nfunction conv2DBackpropInput(args: {\n  backend: BackendWasm,\n  inputs: Conv2DBackpropInputInputs,\n  attrs: Conv2DBackpropInputAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {dy, filter} = inputs;\n  const {strides, pad, dataFormat, dimRoundingMode, inputShape} = attrs;\n\n  const dilations = 1;\n\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      inputShape, filter.shape as [number, number, number, number], strides,\n      dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n  const {\n    batchSize,\n    filterHeight,\n    filterWidth,\n    inChannels,\n    inHeight,\n    inWidth,\n    outChannels,\n    outHeight,\n    outWidth,\n    strideHeight,\n    strideWidth\n  } = convInfo;\n\n  const topPad = filterHeight - 1 - convInfo.padInfo.top;\n  const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n\n  const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n  const dxStrides = util.computeStrides(convInfo.inShape);\n  const dyStrides = util.computeStrides(dy.shape);\n  const [fltS0, fltS1, fltS2] = util.computeStrides(filter.shape);\n  const xBatchStride = dxStrides[0];\n  const xRowStride = isChannelsLast ? dxStrides[1] : dxStrides[2];\n  const xColStride = isChannelsLast ? dxStrides[2] : 1;\n  const xChannelStride = isChannelsLast ? 1 : dxStrides[1];\n  const yBatchStride = dyStrides[0];\n  const yRowStride = isChannelsLast ? dyStrides[1] : dyStrides[2];\n  const yColStride = isChannelsLast ? dyStrides[2] : 1;\n  const yChannelStride = isChannelsLast ? 1 : dyStrides[1];\n\n  const out = backend.makeOutput(convInfo.inShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const dyId = backend.dataIdMap.get(dy.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  wasmConv2DBackpropInput(\n      dyId, filterId, batchSize, filterHeight, filterWidth, inHeight, inWidth,\n      inChannels, outHeight, outWidth, outChannels, strideHeight, strideWidth,\n      topPad, leftPad, fltS0, fltS1, fltS2, xBatchStride, xRowStride,\n      xColStride, xChannelStride, yBatchStride, yRowStride, yColStride,\n      yChannelStride, outId);\n  return out;\n}\n\nexport const conv2DBackpropInputConfig: KernelConfig = {\n  kernelName: Conv2DBackpropInput,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2DBackpropInput as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {CropAndResize, CropAndResizeAttrs, CropAndResizeInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\n// Must match enum in CropAndResize.cc\nenum InterpolationMethod {\n  bilinear = 0,\n  nearest = 1\n}\n\nlet wasmCropAndResize: (\n    imagesId: number, boxesId: number, boxIndId: number, numBoxes: number,\n    imagesShape: Uint8Array, cropHeight: number, cropWidth: number,\n    method: number, extrapolationValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmCropAndResize = backend.wasm.cwrap(CropAndResize, null /*void*/, [\n    'number',  // imagesId\n    'number',  // boxesId\n    'number',  // boxIndId\n    'number',  // numBoxes\n    'array',   // images shape\n    'number',  // cropHeight\n    'number',  // cropWidth\n    'number',  // method\n    'number',  // extrapolation value\n    'number'   // out id\n  ]);\n}\n\nfunction cropAndResize(args: {\n  backend: BackendWasm,\n  inputs: CropAndResizeInputs,\n  attrs: CropAndResizeAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {method, extrapolationValue, cropSize} = attrs;\n  const {image, boxes, boxInd} = inputs;\n\n  const numBoxes = boxes.shape[0];\n\n  const [cropHeight, cropWidth] = cropSize as [number, number];\n  const outShape = [numBoxes, cropHeight, cropWidth, image.shape[3]];\n\n  let imagesData = backend.dataIdMap.get(image.dataId);\n  let castedData;\n  if (image.dtype !== 'float32') {\n    castedData = cast({backend, inputs: {x: image}, attrs: {dtype: 'float32'}});\n    imagesData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  const imagesId = imagesData.id;\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const boxIndId = backend.dataIdMap.get(boxInd.dataId).id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const imagesShapeBytes = new Uint8Array(new Int32Array(image.shape).buffer);\n\n  wasmCropAndResize(\n      imagesId, boxesId, boxIndId, numBoxes, imagesShapeBytes, cropHeight,\n      cropWidth,\n      InterpolationMethod[method as {} as keyof typeof InterpolationMethod],\n      extrapolationValue, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const cropAndResizeConfig: KernelConfig = {\n  kernelName: CropAndResize,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cropAndResize as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cos, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const cosConfig: KernelConfig = createUnaryKernelConfig(Cos);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Cumsum, CumsumAttrs, CumsumInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nimport {transpose} from './Transpose';\n\nlet wasmCumsum: (xId: number, exclusive: number, reverse: number,\n                 finalDim: number, outId: number, dtype: CppDType) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmCumsum = backend.wasm.cwrap(Cumsum, null /* void */, [\n    'number', // x_id\n    'number', // exclusive\n    'number', // reverse\n    'number', // final_dim\n    'number', // out_id\n    'number'  // dtype\n  ]);\n}\n\nexport function cumsum(\n  args: {inputs: CumsumInputs, backend: BackendWasm, attrs: CumsumAttrs}):\nTensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, exclusive, reverse} = attrs;\n  const xRank = x.shape.length;\n\n  util.assert(x.dtype === 'float32' || x.dtype === 'int32',\n    () => `cumsum does not support ${x.dtype} tensors in the WASM backend`);\n  // permute required axis to inner most axis\n  const permutation = backend_util.getAxesPermutation([axis], xRank);\n  let permutedX = x;\n  if (permutation !== null) {\n    permutedX = transpose({inputs: {x}, attrs: {perm: permutation}, backend});\n  }\n  const permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\n  backend_util.assertAxesAreInnerMostDims('cumsum', [permutedAxis], xRank);\n\n  const permutedOut = backend.makeOutput(permutedX.shape, permutedX.dtype);\n  const finalDim = permutedX.shape[permutedAxis];\n  const permutedXId = backend.dataIdMap.get(permutedX.dataId).id;\n  const permutedOutId = backend.dataIdMap.get(permutedOut.dataId).id;\n  wasmCumsum(permutedXId, exclusive ? 1 : 0, reverse ? 1 : 0, finalDim,\n             permutedOutId, CppDType[x.dtype]);\n\n  // transpose data back if permuted\n  let out = permutedOut;\n  if (permutation !== null) {\n    const undoPermutation = backend_util.getUndoAxesPermutation(permutation);\n    out = transpose(\n      {inputs: {x: permutedOut}, attrs: {perm: undoPermutation}, backend});\n    backend.disposeData(permutedX.dataId);\n    backend.disposeData(permutedOut.dataId);\n  }\n  return out;\n}\n\nexport const cumsumConfig: KernelConfig = {\n  kernelName: Cumsum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cumsum as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DepthToSpace, DepthToSpaceAttrs, DepthToSpaceInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmDepthToSpace: (\n    xId: number, blockSize: number, channelsLast: number, xStrides: Uint8Array,\n    xStridesLength: number, outputShape: Uint8Array, outputStrides: Uint8Array,\n    outSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmDepthToSpace = backend.wasm.cwrap(DepthToSpace, null /*void*/, [\n    'number',  // xId\n    'number',  // blockSize\n    'number',  // channelsLast\n    'array',   // xStrides\n    'number',  // xStridesLength\n    'array',   // outputShape\n    'array',   // outputStrides\n    'number',  // outSize\n    'number',  // outId\n  ]);\n}\n\nexport function depthToSpace(args: {\n  backend: BackendWasm,\n  inputs: DepthToSpaceInputs,\n  attrs: DepthToSpaceAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x} = inputs;\n  const {blockSize, dataFormat} = attrs;\n\n  util.assert(\n      blockSize > 1,\n      () => `blockSize should be > 1 for depthToSpace, but was: ${blockSize}`);\n\n  const batchSize = x.shape[0];\n  const inputHeight = (dataFormat === 'NHWC') ? x.shape[1] : x.shape[2];\n  const inputWidth = (dataFormat === 'NHWC') ? x.shape[2] : x.shape[3];\n  const inputDepth = (dataFormat === 'NHWC') ? x.shape[3] : x.shape[1];\n\n  const outputHeight = inputHeight * blockSize;\n  const outputWidth = inputWidth * blockSize;\n  const outputDepth = inputDepth / (blockSize * blockSize);\n\n  const outputShape = (dataFormat === 'NHWC') ?\n      [batchSize, outputHeight, outputWidth, outputDepth] :\n      [batchSize, outputDepth, outputHeight, outputWidth];\n\n  const out = backend.makeOutput(outputShape, 'float32');\n\n  const xData = backend.dataIdMap.get(x.dataId);\n  const xId = xData.id;\n  const xStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n\n  const outputShapeBytes = new Uint8Array(new Int32Array(outputShape).buffer);\n  const outStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(outputShape)).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const channelsLast = dataFormat === 'NHWC' ? 1 : 0;\n  wasmDepthToSpace(\n      xId, blockSize, channelsLast, xStridesBytes, x.shape.length - 1,\n      outputShapeBytes, outStridesBytes, outputShape.length, outId);\n\n  return out;\n}\n\nexport const depthToSpaceConfig: KernelConfig = {\n  kernelName: DepthToSpace,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthToSpace as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DepthwiseConv2dNative, DepthwiseConv2dNativeAttrs, DepthwiseConv2dNativeInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmDepthwiseConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDepthwiseConv2d =\n      backend.wasm.cwrap(DepthwiseConv2dNative, null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // outId\n      ]);\n}\n\nfunction depthwiseConv2d(args: {\n  inputs: DepthwiseConv2dNativeInputs,\n  backend: BackendWasm,\n  attrs: DepthwiseConv2dNativeAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode} = attrs;\n\n  const $dilations = dilations == null ? [1, 1] : dilations;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides,\n      ($dilations as number | [number, number]), pad, dimRoundingMode,\n      true /* depthwise */);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend DepthwiseConv2dNative does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmDepthwiseConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nexport const depthwiseConv2dNativeConfig: KernelConfig = {\n  kernelName: DepthwiseConv2dNative,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthwiseConv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Equal, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const equalConfig: KernelConfig =\n    createBinaryKernelConfig(Equal, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Exp, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const expConfig: KernelConfig = createUnaryKernelConfig(Exp);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ExpandDims, ExpandDimsAttrs, ExpandDimsInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {reshape} from './Reshape';\n\nexport function expandDims(args: {\n  inputs: ExpandDimsInputs,\n  attrs: ExpandDimsAttrs,\n  backend: BackendWasm\n}) {\n  const {inputs, attrs, backend} = args;\n  const {input} = inputs;\n  const {dim} = attrs;\n\n  const inputRank = input.shape.length;\n  const newShape = input.shape.slice();\n  let $dim = dim;\n  if (dim < 0) {\n    // Negative value is counted from the tail of rank.\n    util.assert(\n        -(inputRank + 1) <= dim,\n        () => `Axis must be in the interval [${- (inputRank + 1)}, ${\n            inputRank}]`);\n    $dim = inputRank + dim + 1;\n  }\n  newShape.splice($dim, 0, 1);\n\n  return reshape({inputs: {x: input}, backend, attrs: {shape: newShape}});\n}\n\nexport const expandDimsConfig: KernelConfig = {\n  kernelName: ExpandDims,\n  backendName: 'wasm',\n  kernelFunc: expandDims as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {Fill, FillAttrs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction fill(args: {attrs: FillAttrs, backend: BackendWasm}) {\n  const {attrs: {shape, value, dtype}, backend} = args;\n  const out = backend.makeOutput(shape, dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(value as number);\n  return out;\n}\n\nexport const fillConfig: KernelConfig = {\n  kernelName: Fill,\n  backendName: 'wasm',\n  kernelFunc: fill as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FlipLeftRight, FlipLeftRightInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFlipLeftRight: (\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\n    numChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFlipLeftRight = backend.wasm.cwrap(FlipLeftRight, null /* void */, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // imageHeight\n    'number',  // imageWidth\n    'number',  // numChannels\n    'number',  // outId\n  ]);\n}\n\nexport function flipLeftRight(\n    args: {inputs: FlipLeftRightInputs, backend: BackendWasm}): TensorInfo {\n  const {inputs, backend} = args;\n  const {image} = inputs;\n\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n  wasmFlipLeftRight(\n      imageId, batch, imageHeight, imageWidth, numChannels, outId);\n  return out;\n}\n\nexport const flipLeftRightConfig: KernelConfig = {\n  kernelName: FlipLeftRight,\n  backendName: 'wasm',\n  kernelFunc: flipLeftRight as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FusedBatchNorm, FusedBatchNormAttrs, FusedBatchNormInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmBatchNorm: (\n    xId: number, meanId: number, varianceId: number, offsetId: number,\n    scaleId: number, varianceEpsilon: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmBatchNorm = backend.wasm.cwrap(\n      FusedBatchNorm, null /* void */,\n      ['number', 'number', 'number', 'number', 'number', 'number', 'number']);\n}\n\nfunction fusedBatchNorm(args: {\n  backend: BackendWasm,\n  inputs: FusedBatchNormInputs,\n  attrs: FusedBatchNormAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {varianceEpsilon} = attrs;\n  const {x, mean, variance, offset, scale} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const meanId = backend.dataIdMap.get(mean.dataId).id;\n  const varianceId = backend.dataIdMap.get(variance.dataId).id;\n  const offsetId = offset != null ? backend.dataIdMap.get(offset.dataId).id : 0;\n  const scaleId = scale != null ? backend.dataIdMap.get(scale.dataId).id : 0;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmBatchNorm(\n      xId, meanId, varianceId, offsetId, scaleId, varianceEpsilon, outId);\n  return out;\n}\n\nexport const fusedBatchNormConfig: KernelConfig = {\n  kernelName: FusedBatchNorm,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchNorm as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Floor, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const floorConfig: KernelConfig = createUnaryKernelConfig(Floor);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FloorDiv, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const floorDivConfig: KernelConfig =\n    createBinaryKernelConfig(FloorDiv, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, FusedConv2D, FusedConv2DAttrs, FusedConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedConv2d:\n    (xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n     filterId: number, filterHeight: number, filterWidth: number,\n     biasId: number, padTop: number, padRight: number, padBottom: number,\n     padLeft: number, isSamePad: number, dilationHeight: number,\n     dilationWidth: number, strideHeight: number, strideWidth: number,\n     inputChannels: number, outputChannels: number, activation: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedConv2d = backend.wasm.cwrap(FusedConv2D, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // biasId\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // activation\n    'number',  // preluActivationWeightsId\n    'number',  // leakyreluAlpha\n    'number',  // outId\n  ]);\n}\n\nfunction fusedConv2d(args: {\n  inputs: FusedConv2DInputs,\n  backend: BackendWasm,\n  attrs: FusedConv2DAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dataFormat,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode);\n\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (dataFormat !== 'NHWC') {\n    throw new Error(\n        `wasm backend FusedConv2D does not support dataFormat:'` +\n        `${dataFormat}'. Please use 'NHWC'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n\n  wasmFusedConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const fusedConv2DConfig: KernelConfig = {\n  kernelName: FusedConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedConv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, FusedDepthwiseConv2D, FusedDepthwiseConv2DAttrs, FusedDepthwiseConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedDepthwiseConv2d:\n    (xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n     filterId: number, filterHeight: number, filterWidth: number,\n     biasId: number, padTop: number, padRight: number, padBottom: number,\n     padLeft: number, isSamePad: number, dilationHeight: number,\n     dilationWidth: number, strideHeight: number, strideWidth: number,\n     inputChannels: number, outputChannels: number, activation: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedDepthwiseConv2d =\n      backend.wasm.cwrap(FusedDepthwiseConv2D, null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // biasId\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // activation\n        'number',  // preluActivationWeightsId\n        'number',  // leakyreluAlpha\n        'number',  // outId\n      ]);\n}\n\nfunction fusedDepthwiseConv2d(args: {\n  inputs: FusedDepthwiseConv2DInputs,\n  backend: BackendWasm,\n  attrs: FusedDepthwiseConv2DAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dataFormat,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode, true /* depthwise */);\n\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedDepthwiseConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedDepthwiseConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedDepthwiseConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (dataFormat !== 'NHWC') {\n    throw new Error(\n        `wasm backend FusedDepthwiseConv2D does not support dataFormat:'` +\n        `${dataFormat}'. Please use 'NHWC'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n\n  wasmFusedDepthwiseConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const fusedDepthwiseConv2DConfig: KernelConfig = {\n  kernelName: FusedDepthwiseConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedDepthwiseConv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {gather_util, GatherNd, GatherNdInputs, KernelConfig, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmGatherNd: (\n    xId: number, dtype: CppDType, indicesId: number, numSlices: number,\n    sliceRank: number, sliceSize: number, strides: Uint8Array, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGatherNd = backend.wasm.cwrap(GatherNd, null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'number',  // indicesId\n    'number',  // numSlices\n    'number',  // sliceRank\n    'number',  // sliceSize\n    'array',   // strides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherNd(args: {backend: BackendWasm, inputs: GatherNdInputs}):\n    TensorInfo {\n  const {backend, inputs} = args;\n  const {params, indices} = inputs;\n\n  const [resultShape, numSlices, sliceSize, strides] =\n      gather_util.prepareAndValidate(params, indices);\n\n  const out = backend.makeOutput(resultShape, params.dtype);\n  if (numSlices === 0) {\n    return out;\n  }\n\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n\n  const xData = backend.dataIdMap.get(params.dataId);\n  const xId = xData.id;\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmGatherNd(\n      xId, CppDType[params.dtype], indicesId, numSlices, sliceRank, sliceSize,\n      stridesBytes, outId);\n\n  return out;\n}\n\nexport const gatherNdConfig: KernelConfig = {\n  kernelName: GatherNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherNd\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, GatherV2, GatherV2Attrs, GatherV2Inputs, KernelConfig, KernelFunc, Tensor, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\nimport {CppDType} from './types';\n\nlet wasmGather: (\n    xId: number, dtype: CppDType, xStrides: Uint8Array, stridesSize: number,\n    indicesId: number, batchSize: number, outStrides: Uint8Array,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGather = backend.wasm.cwrap('Gather', null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'array',   // xStrides\n    'number',  // stridesSize\n    'number',  // indicesId\n    'number',  // batchSize\n    'array',   // outStrides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherV2(\n    args: {backend: BackendWasm, inputs: GatherV2Inputs, attrs: GatherV2Attrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x, indices} = inputs;\n  const {axis, batchDims} = attrs;\n\n  const parsedAxis = util.parseAxisParam(axis, x.shape)[0];\n  const shapeInfo = backend_util.segment_util.collectGatherOpShapeInfo(\n      x as Tensor, indices as Tensor, parsedAxis, batchDims);\n\n  const flattenX = reshape({\n    inputs: {x},\n    attrs: {\n      shape: [\n        shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize,\n        shapeInfo.sliceSize\n      ]\n    },\n    backend\n  });\n  const indicesSize = util.sizeFromShape(indices.shape);\n  const flattenIndex = reshape({\n    inputs: {x: indices},\n    attrs: {shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize]},\n    backend\n  });\n  const flattenOutputShape = [\n    shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize,\n    shapeInfo.sliceSize\n  ];\n\n  const out = backend.makeOutput(flattenOutputShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n  const stridesSize = flattenX.shape.length - 1;\n\n  const xData = backend.dataIdMap.get(flattenX.dataId);\n  const xId = xData.id;\n\n  const indicesData = backend.dataIdMap.get(flattenIndex.dataId);\n  const indicesId = indicesData.id;\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const xStridesBytes = new Uint8Array(\n      new Int32Array(util.computeStrides(flattenX.shape)).buffer);\n  const outStridesBytes = new Uint8Array(\n      new Int32Array(util.computeStrides(flattenOutputShape)).buffer);\n\n  wasmGather(\n      xId, CppDType[x.dtype], xStridesBytes, stridesSize, indicesId,\n      shapeInfo.batchSize, outStridesBytes, outId);\n\n  backend.disposeData(flattenX.dataId);\n  backend.disposeData(flattenIndex.dataId);\n\n  // reshape\n  out.shape = shapeInfo.outputShape;\n  return out;\n}\n\nexport const gatherV2Config: KernelConfig = {\n  kernelName: GatherV2,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherV2 as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LeakyRelu, LeakyReluAttrs, LeakyReluInputs, util} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, leakyreluAlpha: number, outId: number) => void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(LeakyRelu, null /* void */, [\n    'number',  // x_id,\n    'number',  // leakyrelu_alpha\n    'number'   // out_id\n  ]);\n}\n\nexport function leakyRelu(\n    args:\n        {inputs: LeakyReluInputs, attrs: LeakyReluAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {alpha}, backend} = args;\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n\n  if (util.sizeFromShape(x.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmFunc(xId, alpha, outId);\n  }\n\n  return out;\n}\n\nexport const leakyReluConfig: KernelConfig = {\n  kernelName: LeakyRelu,\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: leakyRelu as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Greater, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const greaterConfig: KernelConfig =\n    createBinaryKernelConfig(Greater, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {GreaterEqual, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const greaterEqualConfig: KernelConfig =\n    createBinaryKernelConfig(GreaterEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {Max, MaxAttrs, MaxInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmMax: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMax = backend.wasm.cwrap(Max, null /*void*/, ['number, number, number']);\n}\n\nfunction max(args: {backend: BackendWasm, inputs: MaxInputs, attrs: MaxAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {reductionIndices: axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('max', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMax(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const maxConfig: KernelConfig = {\n  kernelName: Max,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: max as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Less} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessConfig: KernelConfig =\n    createBinaryKernelConfig(Less, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, LessEqual} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessEqualConfig: KernelConfig =\n    createBinaryKernelConfig(LessEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Log} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const logConfig: KernelConfig = createUnaryKernelConfig(Log);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, LogicalAnd} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalAndConfig: KernelConfig =\n    createBinaryKernelConfig(LogicalAnd, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, MaxPool, MaxPoolAttrs, MaxPoolInputs, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmMaxPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, dilationHeight: number,\n    dilationWidth: number, strideHeight: number, strideWidth: number,\n    inputChannels: number, outputChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPool = backend.wasm.cwrap(MaxPool, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction maxPool(\n    args: {inputs: MaxPoolInputs, backend: BackendWasm, attrs: MaxPoolAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const x = inputs.x as Tensor4D;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmMaxPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, dilationHeight, dilationWidth,\n      strideHeight, strideWidth, inputChannels, outputChannels, outId);\n  return out;\n}\n\nexport const maxPoolConfig: KernelConfig = {\n  kernelName: MaxPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPool as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Maximum} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const maximumConfig: KernelConfig =\n    createBinaryKernelConfig(Maximum, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Mean, MeanAttrs, MeanInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {cast} from './Cast';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmMean: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMean =\n      backend.wasm.cwrap(Mean, null /*void*/, ['number, number, number']);\n}\n\nexport function mean(\n    args: {backend: BackendWasm, inputs: MeanInputs, attrs: MeanAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'mean', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  let castedInput = input;\n  if (input.dtype !== 'float32') {\n    castedInput =\n        cast({backend, inputs: {x: input}, attrs: {dtype: 'float32'}});\n    inputId = backend.dataIdMap.get(castedInput.dataId).id;\n  }\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMean(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  if (input.dtype !== 'float32') {\n    backend.disposeData(castedInput.dataId);\n  }\n\n  return out;\n}\n\nexport const meanConfig: KernelConfig = {\n  kernelName: Mean,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: mean as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Min, MinAttrs, MinInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmMin: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMin = backend.wasm.cwrap(Min, null /*void*/, ['number, number, number']);\n}\n\nfunction min(args: {backend: BackendWasm, inputs: MinInputs, attrs: MinAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n    }\n  }\n\n  const inputRank = input.shape.length;\n\n  backend_util.assertAxesAreInnerMostDims('min', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMin(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const minConfig: KernelConfig = {\n  kernelName: Min,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: min as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, MirrorPad, MirrorPadAttrs, MirrorPadInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\n// Must match enum in MirrorPad.cc\nenum MirrorPaddingMode {\n  reflect = 0,\n  symmetric = 1\n}\n\nlet wasmMirrorPad: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\n    prePaddingsBytes: Uint8Array, postPaddingsBytes: Uint8Array, mode: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMirrorPad = backend.wasm.cwrap(MirrorPad, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'array',   // pre-paddings\n    'array',   // post-paddings\n    'number',  // mode\n    'number',  // outId\n  ]);\n}\n\nfunction mirrorPad(args: {\n  inputs: MirrorPadInputs,\n  backend: BackendWasm,\n  attrs: MirrorPadAttrs\n}) {\n  const {inputs: {x}, backend, attrs: {paddings, mode}} = args;\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n  const prePaddingsBytes =\n      new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n  const postPaddingsBytes =\n      new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n\n  wasmMirrorPad(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes,\n      postPaddingsBytes, MirrorPaddingMode[mode], outId);\n  return out;\n}\n\nexport const mirrorPadConfig: KernelConfig = {\n  kernelName: MirrorPad,\n  backendName: 'wasm',\n  kernelFunc: mirrorPad as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Minimum} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const minimumConfig: KernelConfig =\n    createBinaryKernelConfig(Minimum, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV3, NonMaxSuppressionV3Attrs, NonMaxSuppressionV3Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV3,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV3Inputs,\n  attrs: NonMaxSuppressionV3Attrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset =\n      wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V3, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n  backend.wasm._free(pValidOutputs);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  return selectedIndicesTensor;\n}\n\nexport const nonMaxSuppressionV3Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV3,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Multiply} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\nexport const multiplyConfig: KernelConfig =\n    createBinaryKernelConfig(Multiply, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Neg} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const negConfig: KernelConfig = createUnaryKernelConfig(Neg);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendWasm} from '../backend_wasm';\n\n// Analogous to `struct Result` in `non_max_suppression_impl.h`.\ninterface Result {\n  pSelectedIndices: number;\n  selectedSize: number;\n  pSelectedScores: number;\n  pValidOutputs: number;\n}\n/**\n * Parse the result of the c++ method, which has the shape equivalent to\n * `Result`.\n */\nexport function parseResultStruct(\n    backend: BackendWasm, resOffset: number): Result {\n  const result = new Int32Array(backend.wasm.HEAPU8.buffer, resOffset, 4);\n  const pSelectedIndices = result[0];\n  const selectedSize = result[1];\n  const pSelectedScores = result[2];\n  const pValidOutputs = result[3];\n  // Since the result was allocated on the heap, we have to delete it.\n  backend.wasm._free(resOffset);\n  return {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs};\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV4, NonMaxSuppressionV4Attrs, NonMaxSuppressionV4Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number,\n    padToMaxOutputSize: boolean) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV4,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'bool',    // padToMaxOutputSize\n      ]);\n}\n\nfunction nonMaxSuppressionV4(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV4Inputs,\n  attrs: NonMaxSuppressionV4Attrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, padToMaxOutputSize} =\n      attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      padToMaxOutputSize);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V4, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  const validOutputsTensor = backend.makeOutput([], 'int32', pValidOutputs);\n\n  return [selectedIndicesTensor, validOutputsTensor];\n}\n\nexport const nonMaxSuppressionV4Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: nonMaxSuppressionV4 as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV5, NonMaxSuppressionV5Attrs, NonMaxSuppressionV5Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc:\n    (boxesId: number, scoresId: number, maxOutputSize: number,\n     iouThreshold: number, scoreThreshold: number, softNmsSigma: number) =>\n        number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV5,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'number',  // softNmsSigma\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV5Inputs,\n  attrs: NonMaxSuppressionV5Attrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, softNmsSigma} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      softNmsSigma);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using validOutputs for V5, we have to delete it from the\n  // heap.\n  backend.wasm._free(pValidOutputs);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n  const selectedScoresTensor =\n      backend.makeOutput([selectedSize], 'float32', pSelectedScores);\n\n  return [selectedIndicesTensor, selectedScoresTensor];\n}\n\nexport const nonMaxSuppressionV5Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OneHot, OneHotAttrs, OneHotInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmOneHot: (\n    indicesId: number, depth: number, onValue: number, offValue: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmOneHot = backend.wasm.cwrap(OneHot, null /* void */, [\n    'number',  // indices_id\n    'number',  // depth,\n    'number',  // onValue\n    'number',  // offValue\n    'number'   // out_id\n  ]);\n}\n\nfunction oneHot(\n    args: {inputs: OneHotInputs, attrs: OneHotAttrs, backend: BackendWasm}) {\n  const {inputs, backend, attrs} = args;\n  const {indices} = inputs;\n  const {depth, onValue, offValue} = attrs;\n\n  const out = backend.makeOutput([...indices.shape, depth], 'int32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  wasmOneHot(indicesId, depth, onValue, offValue, outId);\n\n  return out;\n}\n\nexport const oneHotConfig: KernelConfig = {\n  kernelName: OneHot,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: oneHot as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, NotEqual} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const notEqualConfig: KernelConfig =\n    createBinaryKernelConfig(NotEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OnesLike, OnesLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction onesLike(args: {inputs: OnesLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(1);\n  return out;\n}\n\nexport const onesLikeConfig: KernelConfig = {\n  kernelName: OnesLike,\n  backendName: 'wasm',\n  kernelFunc: onesLike as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Pack, PackAttrs, PackInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\n\nimport {concat} from './Concat';\nimport {expandDims} from './ExpandDims';\n\nexport function pack(\n    args: {inputs: PackInputs, backend: BackendWasm, attrs: PackAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {axis} = attrs;\n\n  if (inputs.length === 1) {\n    return expandDims(\n        {inputs: {input: inputs[0]}, backend, attrs: {dim: axis}});\n  }\n\n  const shape = inputs[0].shape;\n  const dtype = inputs[0].dtype;\n\n  inputs.forEach(t => {\n    util.assertShapesMatch(\n        shape, t.shape,\n        'All tensors passed to stack must have matching shapes');\n    util.assert(\n        dtype === t.dtype,\n        () => 'All tensors passed to stack must have matching dtypes');\n  });\n\n  const intermediateTensorInfos: TensorInfo[] = [];\n  const expandedTensors = inputs.map(t => {\n    const expandedT =\n        expandDims({inputs: {input: t}, backend, attrs: {dim: axis}});\n    intermediateTensorInfos.push(expandedT);\n    return expandedT;\n  });\n\n  const result = concat({inputs: expandedTensors, backend, attrs: {axis}});\n\n  intermediateTensorInfos.forEach(t => backend.disposeData(t.dataId));\n\n  return result;\n}\n\nexport const packConfig: KernelConfig = {\n  kernelName: Pack,\n  backendName: 'wasm',\n  kernelFunc: pack as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, PadV2, PadV2Attrs, PadV2Inputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmPadV2: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\n    prePaddingsBytes: Uint8Array, postPaddingsBytes: Uint8Array,\n    constantValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPadV2 = backend.wasm.cwrap(PadV2, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'array',   // pre-paddings\n    'array',   // post-paddings\n    'number',  // constantValue\n    'number',  // outId\n  ]);\n}\n\nfunction pad(\n    args: {inputs: PadV2Inputs, backend: BackendWasm, attrs: PadV2Attrs}) {\n  const {inputs: {x}, backend, attrs: {paddings, constantValue}} = args;\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n  const prePaddingsBytes =\n      new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n  const postPaddingsBytes =\n      new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n\n  wasmPadV2(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes,\n      postPaddingsBytes, constantValue, outId);\n  return out;\n}\n\nexport const padV2Config: KernelConfig = {\n  kernelName: PadV2,\n  backendName: 'wasm',\n  kernelFunc: pad as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Prelu, PreluInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmPrelu: (xId: number, weightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPrelu = backend.wasm.cwrap(Prelu, null /* void */, [\n    'number',  // x_id\n    'number',  // weights_id\n    'number'   // out_id\n  ]);\n}\n\nfunction prelu(args: {inputs: PreluInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {x, alpha} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const weightsId = backend.dataIdMap.get(alpha.dataId).id;\n\n  const out = backend.makeOutput(x.shape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmPrelu(xId, weightsId, outId);\n  return out;\n}\n\nexport const preluConfig: KernelConfig = {\n  kernelName: Prelu,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prelu as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Pow} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const powConfig: KernelConfig =\n    createBinaryKernelConfig(Pow, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Prod, ProdAttrs, ProdInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nimport {CppDType} from './types';\n\nlet wasmProd: (\n    xId: number, reduceSize: number,\n    dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmProd = backend.wasm.cwrap(Prod, null /*void*/, [\n    'number',\n    'number',\n    'number',\n    'number'\n  ]);\n}\n\nfunction prod(args: {\n  backend: BackendWasm,\n  inputs: ProdInputs,\n  attrs: ProdAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'prod', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmProd(inputId, reduceSize, CppDType[out.dtype], outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const prodConfig: KernelConfig = {\n  kernelName: Prod,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prod as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ResizeBilinear, ResizeBilinearAttrs, ResizeBilinearInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\nlet wasmResizeBilinear: (\n    xId: number, batch: number, oldHeight: number, oldWidth: number,\n    numChannels: number, newHeight: number, newWidth: number,\n    alignCorners: number, halfPixelCenters: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeBilinear = backend.wasm.cwrap(ResizeBilinear, null /*void*/, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // oldHeight\n    'number',  // oldWidth\n    'number',  // numChannels\n    'number',  // newHeight\n    'number',  // newWidth\n    'number',  // alignCorners\n    'number',  // halfPixelCenters\n    'number'   // outId\n  ]);\n}\n\nfunction resizeBilinear(args: {\n  backend: BackendWasm,\n  inputs: ResizeBilinearInputs,\n  attrs: ResizeBilinearAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n\n  const {images} = inputs;\n  const {alignCorners, halfPixelCenters, size} = attrs;\n  const [newHeight, newWidth] = size;\n\n  const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n  const outShape = [batch, newHeight, newWidth, numChannels];\n\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData =\n        cast({backend, inputs: {x: images}, attrs: {dtype: 'float32'}});\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n  const xId = xData.id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(images.shape) === 0) {\n    return out;\n  }\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmResizeBilinear(\n      xId, batch, oldHeight, oldWidth, numChannels, newHeight, newWidth,\n      alignCorners ? 1 : 0, halfPixelCenters ? 1 : 0, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const resizeBilinearConfig: KernelConfig = {\n  kernelName: ResizeBilinear,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeBilinear as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Range, RangeAttrs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {rangeImplCPU} from '../kernel_utils/shared';\n\nexport const range =\n    (args: {backend: BackendWasm, attrs: RangeAttrs}): TensorInfo => {\n      const {backend, attrs} = args;\n      const {start, stop, step, dtype} = attrs;\n      const values = rangeImplCPU(start, stop, step, dtype);\n\n      const out = backend.makeOutput([values.length], dtype);\n      const outVals = backend.typedArrayFromHeap(out);\n      outVals.set(values);\n      return out;\n    };\n\nexport const rangeConfig: KernelConfig = {\n  kernelName: Range,\n  backendName: 'wasm',\n  kernelFunc: range as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport function rangeImpl(start, stop, step, dtype) {\n    const sameStartStop = start === stop;\n    const increasingRangeNegativeStep = start < stop && step < 0;\n    const decreasingRangePositiveStep = stop < start && step > 1;\n    if (sameStartStop || increasingRangeNegativeStep ||\n        decreasingRangePositiveStep) {\n        return util.makeZerosTypedArray(0, dtype);\n    }\n    const numElements = Math.abs(Math.ceil((stop - start) / step));\n    const values = util.makeZerosTypedArray(numElements, dtype);\n    if (stop < start && step === 1) {\n        // Auto adjust the step's sign if it hasn't been set\n        // (or was set to 1)\n        step = -1;\n    }\n    values[0] = start;\n    for (let i = 1; i < values.length; i++) {\n        values[i] = values[i - 1] + step;\n    }\n    return values;\n}\n//# sourceMappingURL=Range_impl.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, RealDiv} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\nexport const realDivConfig: KernelConfig =\n    createBinaryKernelConfig(RealDiv, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Relu} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const reluConfig: KernelConfig = createUnaryKernelConfig(Relu);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Relu6} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const relu6Config: KernelConfig = createUnaryKernelConfig(Relu6);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Reverse, ReverseAttrs, ReverseInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {identity} from './Identity';\nimport {reshape} from './Reshape';\n\nlet wasmReverse: (\n    xId: number, axes: Uint8Array, axesLength: number, outShape: Uint8Array,\n    outShapeLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmReverse = backend.wasm.cwrap(Reverse, null, [\n    'number',  // x_id\n    'array',   // axes\n    'number',  // axes_length\n    'array',   // out_shape\n    'number',  // out_shape_length\n    'number'   // out_id\n  ]);\n}\n\nexport function reverse(\n    args: {inputs: ReverseInputs, backend: BackendWasm, attrs: ReverseAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {dims} = attrs;\n\n  const axes = util.parseAxisParam(dims, x.shape);\n\n  if (x.shape.length === 0) {\n    return identity({inputs: {x}, backend});\n  }\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const axesBytes = new Uint8Array(new Int32Array(axes).buffer);\n  const outShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmReverse(\n      xId, axesBytes, axes.length, outShapeBytes, x.shape.length, outId);\n\n  const reshaped =\n      reshape({inputs: {x: out}, attrs: {shape: x.shape}, backend});\n\n  backend.disposeData(out.dataId);\n  return reshaped;\n}\n\nexport const reverseConfig: KernelConfig = {\n  kernelName: Reverse,\n  backendName: 'wasm',\n  kernelFunc: reverse as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, RotateWithOffset, RotateWithOffsetAttrs, RotateWithOffsetInputs, TensorInfo} from '@tensorflow/tfjs-core';\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmRotate: (\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\n    numChannels: number, radians: number, centerX: number, centerY: number,\n    fillBytes: Uint8Array, fillLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmRotate = backend.wasm.cwrap(RotateWithOffset, null /* void */, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // imageHeight\n    'number',  // imageWidth\n    'number',  // numChannels\n    'number',  // radians\n    'number',  // centerX\n    'number',  // centerY\n    'array',   // fillBytes\n    'number',  // fillLength\n    'number',  // outId\n  ]);\n}\n\nexport function rotateWithOffset(args: {\n  inputs: RotateWithOffsetInputs,\n  backend: BackendWasm,\n  attrs: RotateWithOffsetAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {image} = inputs;\n  const {radians, fillValue, center} = attrs;\n\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n  const [centerX, centerY] =\n      backend_util.getImageCenter(center, imageHeight, imageWidth);\n\n  const fillIsBlack = fillValue === 0;\n  const fullOpacityValue = 255;\n\n  const fillValues = typeof fillValue === 'number' ?\n      [fillValue, fillValue, fillValue, fillIsBlack ? 0 : fullOpacityValue] :\n      [...fillValue, fullOpacityValue];\n  const fillBytes = new Uint8Array(new Int32Array(fillValues).buffer);\n\n  wasmRotate(\n      imageId, batch, imageHeight, imageWidth, numChannels, radians, centerX,\n      centerY, fillBytes, fillValues.length, outId);\n  return out;\n}\n\nexport const rotateWithOffsetConfig: KernelConfig = {\n  kernelName: RotateWithOffset,\n  backendName: 'wasm',\n  kernelFunc: rotateWithOffset as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, scatter_util, ScatterNd, ScatterNdAttrs, ScatterNdInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmScatterNd: (\n    indicesId: number, updatesId: number, dtype: CppDType, sliceRank: number,\n    numUpdates: number, sliceSize: number, strides: Uint8Array,\n    outputSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmScatterNd = backend.wasm.cwrap(ScatterNd, null /*void*/, [\n    'number',  // indicesId\n    'number',  // updatesId\n    'number',  // dtype\n    'number',  // sliceRank\n    'number',  // numUpdates\n    'number',  // sliceSize\n    'array',   // strides\n    'number',  // outputSize\n    'number'   // outId\n  ]);\n}\n\nfunction scatterNd(\n    args:\n        {backend: BackendWasm, inputs: ScatterNdInputs, attrs: ScatterNdAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {indices, updates} = inputs;\n  const {shape} = attrs;\n\n  const out = backend.makeOutput(shape, updates.dtype);\n  if (util.sizeFromShape(shape) === 0) {\n    return out;\n  }\n\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n      scatter_util.calculateShapes(updates, indices, shape);\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const updatesData = backend.dataIdMap.get(updates.dataId);\n  const updatesId = updatesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmScatterNd(\n      indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates,\n      sliceSize, stridesBytes, outputSize, outId);\n\n  return out;\n}\n\nexport const scatterNdConfig: KernelConfig = {\n  kernelName: ScatterNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: scatterNd as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Select, SelectInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmSelect: (\n    conditionId: number, tId: number, eId: number, offset: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmSelect = backend.wasm.cwrap('SelectV2', null, [\n    'number',  // conditionId\n    'number',  // tId\n    'number',  // eId\n    'number',  // offset\n    'number',  // outId\n  ]);\n}\n\nfunction select(args: {inputs: SelectInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {condition, t, e} = inputs;\n\n  const conditionId = backend.dataIdMap.get(condition.dataId).id;\n  const tId = backend.dataIdMap.get(t.dataId).id;\n  const eId = backend.dataIdMap.get(e.dataId).id;\n  const out = backend.makeOutput(t.shape, t.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const cRank = condition.shape.length;\n  const tRank = t.shape.length;\n\n  const offset = cRank === 0 || cRank > 1 || tRank === 1 ?\n      1 :\n      util.sizeFromShape(t.shape.slice(1));\n\n  wasmSelect(conditionId, tId, eId, offset, outId);\n  return out;\n}\n\nexport const selectConfig: KernelConfig = {\n  kernelName: Select,\n  backendName: 'wasm',\n  kernelFunc: select as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Sigmoid, SigmoidInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(Sigmoid, null /* void */, ['number', 'number']);\n}\n\nfunction sigmoid(args: {backend: BackendWasm, inputs: SigmoidInputs}):\n    TensorInfo {\n  const {backend, inputs: {x}} = args;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId);\n  return out;\n}\n\nexport const sigmoidConfig: KernelConfig = {\n  kernelName: 'Sigmoid',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sigmoid as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Softmax, SoftmaxAttrs, SoftmaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, outId: number, channels: number, batch: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(Softmax, null /* void */, [\n    'number',  // xId\n    'number',  // outId\n    'number',  // channels\n    'number'   // batch\n  ]);\n}\n\nfunction softmax(\n    args: {backend: BackendWasm, inputs: SoftmaxInputs, attrs: SoftmaxAttrs}):\n    TensorInfo {\n  const {backend, inputs: {logits}, attrs: {dim}} = args;\n  const xId = backend.dataIdMap.get(logits.dataId).id;\n  const out = backend.makeOutput(logits.shape, logits.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const channels = logits.shape[dim];\n  const batch = util.sizeFromShape(logits.shape) / channels;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId, channels, batch);\n  return out;\n}\n\nexport const softmaxConfig: KernelConfig = {\n  kernelName: Softmax,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: softmax as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Round} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const roundConfig: KernelConfig = createUnaryKernelConfig(Round);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Slice, slice_util, SliceAttrs, SliceInputs, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {sliceImplCPU} from '../kernel_utils/shared';\n\nexport function slice(\n    args: {inputs: SliceInputs, attrs: SliceAttrs, backend: BackendWasm}) {\n  const {inputs: {x}, attrs: {begin, size}, backend} = args;\n\n  const [begin_, size_] = slice_util.parseSliceParams(x, begin, size);\n\n  const isContinous = slice_util.isSliceContinous(x.shape, begin_, size_);\n  const xVals = backend.readSync(x.dataId);\n  const out = backend.makeOutput(size_, x.dtype);\n  const xStrides = util.computeStrides(x.shape);\n  const outData = backend.dataIdMap.get(out.dataId);\n\n  if (isContinous) {\n    const flatOffset = slice_util.computeFlatOffset(begin_, xStrides);\n\n    if (x.dtype === 'string') {\n      outData.stringBytes =\n          (xVals as Uint8Array[])\n              .slice(flatOffset, flatOffset + util.sizeFromShape(size_));\n    } else {\n      const outVals = backend.typedArrayFromHeap(out);\n      outVals.set(\n          (xVals as TypedArray)\n              .subarray(flatOffset, flatOffset + util.sizeFromShape(size_)));\n    }\n\n    return out;\n  }\n\n  if (x.dtype === 'string') {\n    const res = sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype);\n    outData.stringBytes = res as Uint8Array[];\n    return out;\n  }\n\n  const outVals = backend.typedArrayFromHeap(out);\n  const rank = x.shape.length;\n  if (rank === 2) {\n    slice2d(\n        xVals as TypedArray, xStrides[0], outVals, begin_ as [number, number],\n        size_ as [number, number]);\n  } else if (rank === 3) {\n    slice3d(\n        xVals as TypedArray, xStrides[0], xStrides[1], outVals,\n        begin_ as [number, number, number], size_ as [number, number, number]);\n  } else if (rank === 4) {\n    slice4d(\n        xVals as TypedArray, xStrides[0], xStrides[1], xStrides[2], outVals,\n        begin_ as [number, number, number, number],\n        size_ as [number, number, number, number]);\n  } else {\n    const res =\n        sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype) as TypedArray;\n    outVals.set(res);\n  }\n\n  return out;\n}\n\nfunction slice2d(\n    xVals: backend_util.TypedArray, xStride: number,\n    outVals: backend_util.TypedArray, begin: [number, number],\n    size: [number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const endI = beginI + size[0];\n  for (let i = beginI; i < endI; i++) {\n    const xOffset = i * xStride + beginJ;\n    outVals.set(xVals.subarray(xOffset, xOffset + size[1]), outOffset);\n    outOffset += size[1];\n  }\n}\n\nfunction slice3d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    outVals: backend_util.TypedArray, begin: [number, number, number],\n    size: [number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      const xOffset = i * xStride1 + j * xStride2 + beginK;\n      outVals.set(xVals.subarray(xOffset, xOffset + size[2]), outOffset);\n      outOffset += size[2];\n    }\n  }\n}\n\nfunction slice4d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    xStride3: number, outVals: backend_util.TypedArray,\n    begin: [number, number, number, number],\n    size: [number, number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  const endK = beginK + size[2];\n  const beginL = begin[3];\n\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      for (let k = beginK; k < endK; k++) {\n        const xOffset = i * xStride1 + j * xStride2 + k * xStride3 + beginL;\n        outVals.set(xVals.subarray(xOffset, xOffset + size[3]), outOffset);\n        outOffset += size[3];\n      }\n    }\n  }\n}\n\nexport const sliceConfig: KernelConfig = {\n  kernelName: Slice,\n  backendName: 'wasm',\n  kernelFunc: slice as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SplitV, SplitVAttrs, SplitVInputs, util} from '@tensorflow/tfjs-core';\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {slice} from './Slice';\n\nexport function splitV(\n    args: {inputs: SplitVInputs, attrs: SplitVAttrs, backend: BackendWasm}) {\n  const {inputs, attrs, backend} = args;\n  const {x} = inputs;\n  const {numOrSizeSplits, axis} = attrs;\n\n  const $axis = util.parseAxisParam(axis, x.shape)[0];\n\n  const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n  const begin = new Array(x.shape.length).fill(0);\n  const size = x.shape.slice();\n  return splitSizes.map(s => {\n    const xSliceSize = [...size];\n    xSliceSize[$axis] = s;\n    const xSlice =\n        slice({inputs: {x}, attrs: {begin, size: xSliceSize}, backend});\n    begin[$axis] += s;\n    return xSlice;\n  });\n}\n\nexport const splitVConfig: KernelConfig = {\n  kernelName: SplitV,\n  backendName: 'wasm',\n  kernelFunc: splitV as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Step, StepAttrs, StepInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmStep: (xId: number, alpha: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmStep = backend.wasm.cwrap(Step, null /*void*/, [\n    'number',  // x_id\n    'number',  // alpha\n    'number',  // out_id\n  ]);\n}\n\nfunction step(\n    args: {backend: BackendWasm, inputs: StepInputs, attrs: StepAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {alpha} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmStep(xId, alpha, outId);\n  return out;\n}\n\nexport const stepConfig: KernelConfig = {\n  kernelName: Step,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: step as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, StridedSlice, StridedSliceAttrs, StridedSliceInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {reshape} from './Reshape';\nimport {slice} from './Slice';\n\nlet wasmStridedSlice: (\n    xId: number, xStridesBytes: Uint8Array, xRank: number,\n    beginBytes: Uint8Array, endBytes: Uint8Array, stridesBytes: Uint8Array,\n    outShapeBytes: Uint8Array, outStridesBytes: Uint8Array,\n    outShapeLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmStridedSlice = backend.wasm.cwrap(StridedSlice, null /*void*/, [\n    'number',  // xId\n    'array',   // xStrides\n    'number',  // xRank\n    'array',   // beginBytes\n    'array',   // endBytes\n    'array',   // stridesBytes\n    'array',   // outShapeBytes\n    'array',   // outStridesBytes\n    'number',  // outShapeLength\n    'number',  // outId\n  ]);\n}\n\nexport function stridedSlice(args: {\n  backend: BackendWasm,\n  inputs: StridedSliceInputs,\n  attrs: StridedSliceAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x} = inputs;\n\n  let {begin, end, strides} = attrs;\n  if (strides == null) {\n    strides = new Array(begin.length);\n  }\n\n  const {beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask} = attrs;\n\n  const ellipsisAxes = backend_util.slice_util.maskToAxes(ellipsisMask);\n  if (ellipsisAxes.length > 1) {\n    throw new Error('Multiple ellipses in slice is not allowed.');\n  }\n\n  if (ellipsisMask !== 0 && newAxisMask !== 0) {\n    throw new Error(\n        'Using both ellipsisMask and newAxisMask is not yet supported.');\n  }\n\n  if (ellipsisMask !== 0 && shrinkAxisMask !== 0) {\n    throw new Error(\n        'Using both ellipsisMask and shrinkAxisMask is not yet supported.');\n  }\n\n  const numInterpolatedAxes = x.shape.length - begin.length;\n\n  // Expand the dims of x based on the newAxisMask.\n  const expandAxes = backend_util.slice_util.maskToAxes(newAxisMask);\n  const newShape = x.shape.slice();\n  expandAxes.forEach(axis => {\n    begin[axis] = 0;\n    end[axis] = 1;\n    newShape.splice(axis, 0, 1);\n  });\n\n  const xReshaped = reshape({inputs: {x}, attrs: {shape: newShape}, backend});\n\n  const {\n    begin: normalizedBegin,\n    end: normalizedEnd,\n    strides: normalizedStrides\n  } =\n      backend_util.slice_util.getNormalizedAxes(\n          xReshaped.shape, ellipsisAxes, numInterpolatedAxes, begin, end,\n          strides, beginMask, endMask, ellipsisMask);\n  begin = normalizedBegin;\n  end = normalizedEnd;\n  strides = normalizedStrides;\n\n  const shrinkAxes = backend_util.slice_util.maskToAxes(shrinkAxisMask);\n  // Adjust the ends based on the shrink mask.\n  shrinkAxes.forEach(axis => {\n    end[axis] = begin[axis] + 1;\n    strides[axis] = 1;\n  });\n\n  // Figure out the output shape.\n  const size = backend_util.slice_util.computeOutShape(begin, end, strides);\n  // Remove the axes based on shrinkMask.\n  const outShape = size.filter((_, axis) => shrinkAxes.indexOf(axis) === -1);\n\n  const nonStrided = strides.every(v => v === 1);\n  if (nonStrided) {\n    const xSliced = slice(\n        {inputs: {x: xReshaped}, attrs: {begin, size}, backend});\n    backend.disposeData(xReshaped.dataId);\n    const reshaped =\n        reshape({inputs: {x: xSliced}, attrs: {shape: outShape}, backend});\n    backend.disposeData(xSliced.dataId);\n    return reshaped;\n  }\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (!outShape.some(axis => axis === 0)) {\n    const xId = backend.dataIdMap.get(xReshaped.dataId).id;\n    const xStridesBytes = new Uint8Array(\n        new Int32Array(util.computeStrides(xReshaped.shape)).buffer);\n    const beginBytes = new Uint8Array(new Int32Array(begin).buffer);\n    const endBytes = new Uint8Array(new Int32Array(end).buffer);\n    const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n    const outputShapeBytes = new Uint8Array(new Int32Array(outShape).buffer);\n    const outStridesBytes =\n        new Uint8Array(new Int32Array(util.computeStrides(outShape)).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    wasmStridedSlice(\n        xId, xStridesBytes, xReshaped.shape.length, beginBytes, endBytes,\n        stridesBytes, outputShapeBytes, outStridesBytes, outShape.length,\n        outId);\n  }\n  backend.disposeData(xReshaped.dataId);\n\n  const reshaped =\n      reshape({inputs: {x: out}, attrs: {shape: outShape}, backend});\n\n  backend.disposeData(out.dataId);\n  return reshaped;\n}\n\nexport const stridedSliceConfig: KernelConfig = {\n  kernelName: StridedSlice,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: stridedSlice as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Sum, SumAttrs, SumInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmSum: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmSum = backend.wasm.cwrap(Sum, null /*void*/, ['number, number, number']);\n}\n\nfunction sum(args: {backend: BackendWasm, inputs: SumInputs, attrs: SumAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'sum', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmSum(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const sumConfig: KernelConfig = {\n  kernelName: Sum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sum as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Tile, TileAttrs, TileInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmTile: (\n    xId: number, xShape: Uint8Array, xShapeSize: number, newShape: Uint8Array,\n    newShapeSize: number, dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTile = backend.wasm.cwrap(Tile, null /* void */, [\n    'number',  // x_id\n    'array',   // x_shape\n    'number',  // x_shape.length\n    'array',   // new_shape\n    'number',  // new_shape.length\n    'number'   // out_id\n  ]);\n}\n\nfunction tile(\n    args: {inputs: TileInputs, backend: BackendWasm, attrs: TileAttrs}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const {reps} = attrs;\n\n  const newShape: number[] = new Array(x.shape.length);\n  for (let i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[i] * reps[i];\n  }\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  const newShapeBytes = new Uint8Array(new Int32Array(newShape).buffer);\n\n  const out = backend.makeOutput(newShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmTile(\n      xId, xShapeBytes, x.shape.length, newShapeBytes, newShape.length,\n      CppDType[out.dtype], outId);\n  return out;\n}\n\nexport const tileConfig: KernelConfig = {\n  kernelName: Tile,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: tile as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, TopK, TopKAttrs, TopKInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\nlet wasmTopK: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number,\n    xDtype: CppDType, k: number, sorted: boolean, outValuesId: number,\n    outIndicesId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTopK = backend.wasm.cwrap(TopK, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'number',  // k\n    'bool',    // sorted\n    'number',  // outValuesId\n    'number',  // outIndicesId\n  ]);\n}\n\nexport const topk:\n    (args: {inputs: TopKInputs, backend: BackendWasm, attrs: TopKAttrs}) =>\n        TensorInfo[] | TensorInfo = ({inputs, backend, attrs}) => {\n          const {x} = inputs;\n          const {k, sorted} = attrs;\n\n          const xId = backend.dataIdMap.get(x.dataId).id;\n          const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n          const outputShape = x.shape.slice();\n          outputShape[outputShape.length - 1] = k;\n          const outValues = backend.makeOutput(outputShape, x.dtype);\n          const outValuesId = backend.dataIdMap.get(outValues.dataId).id;\n          const outIndices = backend.makeOutput(outputShape, 'int32');\n          const outIndicesId = backend.dataIdMap.get(outIndices.dataId).id;\n\n          wasmTopK(\n              xId, xShapeBytes, x.shape.length, CppDType[x.dtype], k, sorted,\n              outValuesId, outIndicesId);\n\n          return [outValues, outIndices];\n        };\n\nexport const topKConfig: KernelConfig = {\n  kernelName: TopK,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: topk as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport {KernelConfig, registerKernel} from '@tensorflow/tfjs-core';\n\nimport {fusedMatMulConfig} from './kernels/_FusedMatMul';\nimport {absConfig} from './kernels/Abs';\nimport {addConfig} from './kernels/Add';\nimport {addNConfig} from './kernels/AddN';\nimport {allConfig} from './kernels/All';\nimport {anyConfig} from './kernels/Any';\nimport {argMaxConfig} from './kernels/ArgMax';\nimport {avgPoolConfig} from './kernels/AvgPool';\nimport {batchMatMulConfig} from './kernels/BatchMatMul';\nimport {castConfig} from './kernels/Cast';\nimport {ceilConfig} from './kernels/Ceil';\nimport {clipByValueConfig} from './kernels/ClipByValue';\nimport {concatConfig} from './kernels/Concat';\nimport {conv2DConfig} from './kernels/Conv2D';\nimport {conv2DBackpropInputConfig} from './kernels/Conv2DBackpropInput';\nimport {cosConfig} from './kernels/Cos';\nimport {cropAndResizeConfig} from './kernels/CropAndResize';\nimport {cumsumConfig} from './kernels/Cumsum';\nimport {depthToSpaceConfig} from './kernels/DepthToSpace';\nimport {depthwiseConv2dNativeConfig} from './kernels/DepthwiseConv2dNative';\nimport {equalConfig} from './kernels/Equal';\nimport {expConfig} from './kernels/Exp';\nimport {expandDimsConfig} from './kernels/ExpandDims';\nimport {fillConfig} from './kernels/Fill';\nimport {flipLeftRightConfig} from './kernels/FlipLeftRight';\nimport {floorConfig} from './kernels/Floor';\nimport {floorDivConfig} from './kernels/FloorDiv';\nimport {fusedBatchNormConfig} from './kernels/FusedBatchNorm';\nimport {fusedConv2DConfig} from './kernels/FusedConv2D';\nimport {fusedDepthwiseConv2DConfig} from './kernels/FusedDepthwiseConv2D';\nimport {gatherNdConfig} from './kernels/GatherNd';\nimport {gatherV2Config} from './kernels/GatherV2';\nimport {greaterConfig} from './kernels/Greater';\nimport {greaterEqualConfig} from './kernels/GreaterEqual';\nimport {identityConfig} from './kernels/Identity';\nimport {leakyReluConfig} from './kernels/LeakyRelu';\nimport {lessConfig} from './kernels/Less';\nimport {lessEqualConfig} from './kernels/LessEqual';\nimport {logConfig} from './kernels/Log';\nimport {logicalAndConfig} from './kernels/LogicalAnd';\nimport {maxConfig} from './kernels/Max';\nimport {maximumConfig} from './kernels/Maximum';\nimport {maxPoolConfig} from './kernels/MaxPool';\nimport {meanConfig} from './kernels/Mean';\nimport {minConfig} from './kernels/Min';\nimport {minimumConfig} from './kernels/Minimum';\nimport {mirrorPadConfig} from './kernels/MirrorPad';\nimport {multiplyConfig} from './kernels/Multiply';\nimport {negConfig} from './kernels/Neg';\nimport {nonMaxSuppressionV3Config} from './kernels/NonMaxSuppressionV3';\nimport {nonMaxSuppressionV4Config} from './kernels/NonMaxSuppressionV4';\nimport {nonMaxSuppressionV5Config} from './kernels/NonMaxSuppressionV5';\nimport {notEqualConfig} from './kernels/NotEqual';\nimport {oneHotConfig} from './kernels/OneHot';\nimport {onesLikeConfig} from './kernels/OnesLike';\nimport {packConfig} from './kernels/Pack';\nimport {padV2Config} from './kernels/PadV2';\nimport {powConfig} from './kernels/Pow';\nimport {preluConfig} from './kernels/Prelu';\nimport {prodConfig} from './kernels/Prod';\nimport {rangeConfig} from './kernels/Range';\nimport {realDivConfig} from './kernels/RealDiv';\nimport {reluConfig} from './kernels/Relu';\nimport {relu6Config} from './kernels/Relu6';\nimport {reshapeConfig} from './kernels/Reshape';\nimport {resizeBilinearConfig} from './kernels/ResizeBilinear';\nimport {reverseConfig} from './kernels/Reverse';\nimport {rotateWithOffsetConfig} from './kernels/RotateWithOffset';\nimport {roundConfig} from './kernels/Round';\nimport {rsqrtConfig} from './kernels/Rsqrt';\nimport {scatterNdConfig} from './kernels/ScatterNd';\nimport {selectConfig} from './kernels/Select';\nimport {sigmoidConfig} from './kernels/Sigmoid';\nimport {sinConfig} from './kernels/Sin';\nimport {sliceConfig} from './kernels/Slice';\nimport {softmaxConfig} from './kernels/Softmax';\nimport {splitVConfig} from './kernels/SplitV';\nimport {sqrtConfig} from './kernels/Sqrt';\nimport {squareConfig} from './kernels/Square';\nimport {squaredDifferenceConfig} from './kernels/SquaredDifference';\nimport {stepConfig} from './kernels/Step';\nimport {stridedSliceConfig} from './kernels/StridedSlice';\nimport {subConfig} from './kernels/Sub';\nimport {sumConfig} from './kernels/Sum';\nimport {tanConfig} from './kernels/Tan';\nimport {tanhConfig} from './kernels/Tanh';\nimport {tileConfig} from './kernels/Tile';\nimport {topKConfig} from './kernels/TopK';\nimport {transposeConfig} from './kernels/Transpose';\nimport {unpackConfig} from './kernels/Unpack';\nimport {zerosLikeConfig} from './kernels/ZerosLike';\n\n// List all kernel configs here\nconst kernelConfigs: KernelConfig[] = [\n  absConfig,\n  addConfig,\n  addNConfig,\n  allConfig,\n  anyConfig,\n  argMaxConfig,\n  avgPoolConfig,\n  batchMatMulConfig,\n  castConfig,\n  ceilConfig,\n  clipByValueConfig,\n  concatConfig,\n  conv2DConfig,\n  conv2DBackpropInputConfig,\n  cosConfig,\n  cropAndResizeConfig,\n  cumsumConfig,\n  depthToSpaceConfig,\n  depthwiseConv2dNativeConfig,\n  equalConfig,\n  expConfig,\n  expandDimsConfig,\n  fillConfig,\n  flipLeftRightConfig,\n  floorConfig,\n  floorDivConfig,\n  fusedMatMulConfig,\n  fusedBatchNormConfig,\n  fusedConv2DConfig,\n  fusedDepthwiseConv2DConfig,\n  gatherNdConfig,\n  gatherV2Config,\n  greaterConfig,\n  greaterEqualConfig,\n  identityConfig,\n  leakyReluConfig,\n  lessConfig,\n  lessEqualConfig,\n  logConfig,\n  logicalAndConfig,\n  maxConfig,\n  maximumConfig,\n  maxPoolConfig,\n  meanConfig,\n  minConfig,\n  minimumConfig,\n  mirrorPadConfig,\n  multiplyConfig,\n  negConfig,\n  nonMaxSuppressionV3Config,\n  nonMaxSuppressionV4Config,\n  nonMaxSuppressionV5Config,\n  notEqualConfig,\n  oneHotConfig,\n  onesLikeConfig,\n  packConfig,\n  padV2Config,\n  powConfig,\n  preluConfig,\n  prodConfig,\n  rangeConfig,\n  realDivConfig,\n  reluConfig,\n  relu6Config,\n  reshapeConfig,\n  resizeBilinearConfig,\n  reverseConfig,\n  rotateWithOffsetConfig,\n  rsqrtConfig,\n  roundConfig,\n  scatterNdConfig,\n  selectConfig,\n  sigmoidConfig,\n  sinConfig,\n  sliceConfig,\n  softmaxConfig,\n  splitVConfig,\n  sqrtConfig,\n  squareConfig,\n  squaredDifferenceConfig,\n  stepConfig,\n  stridedSliceConfig,\n  subConfig,\n  sumConfig,\n  tanConfig,\n  tanhConfig,\n  tileConfig,\n  topKConfig,\n  transposeConfig,\n  unpackConfig,\n  zerosLikeConfig\n];\n\nfor (const kernelConfig of kernelConfigs) {\n  registerKernel(kernelConfig);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ZerosLike, ZerosLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction zerosLike(args: {inputs: ZerosLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(0);\n  return out;\n}\n\nexport const zerosLikeConfig: KernelConfig = {\n  kernelName: ZerosLike,\n  backendName: 'wasm',\n  kernelFunc: zerosLike as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Rsqrt} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const rsqrtConfig: KernelConfig = createUnaryKernelConfig(Rsqrt);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sin} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const sinConfig: KernelConfig = createUnaryKernelConfig(Sin);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Sqrt} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const sqrtConfig: KernelConfig = createUnaryKernelConfig(Sqrt);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Square} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const squareConfig: KernelConfig = createUnaryKernelConfig(Square);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, SquaredDifference} from '@tensorflow/tfjs-core';\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const squaredDifferenceConfig: KernelConfig =\n    createBinaryKernelConfig(SquaredDifference, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sub} from '@tensorflow/tfjs-core';\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const subConfig: KernelConfig =\n    createBinaryKernelConfig(Sub, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Tan} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const tanConfig: KernelConfig = createUnaryKernelConfig(Tan);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Tanh} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const tanhConfig: KernelConfig = createUnaryKernelConfig(Tanh);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Unpack, UnpackAttrs, UnpackInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {slice} from './Slice';\n\nfunction unpack(\n    args: {inputs: UnpackInputs, backend: BackendWasm, attrs: UnpackAttrs}):\n    TensorInfo[] {\n  const {inputs, backend, attrs} = args;\n  const {value} = inputs;\n  let {axis} = attrs;\n\n  if (axis < 0) {\n    axis += value.shape.length;\n  }\n\n  const numOutputs = value.shape[axis];\n  const rank = value.shape.length;\n  const outShape: number[] = new Array(rank - 1);\n  let outIndex = 0;\n  for (let i = 0; i < rank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = value.shape[i];\n    }\n  }\n  const outs: TensorInfo[] = new Array(numOutputs);\n  const begin = new Array(rank).fill(0);\n  const size = value.shape.slice();\n  size[axis] = 1;\n  for (let i = 0; i < outs.length; i++) {\n    begin[axis] = i;\n    outs[i] = slice({inputs: {x: value}, attrs: {begin, size}, backend});\n  }\n  return outs.map(({dataId, dtype}) => ({dataId, dtype, shape: outShape}));\n}\n\nexport const unpackConfig: KernelConfig = {\n  kernelName: Unpack,\n  backendName: 'wasm',\n  kernelFunc: unpack as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env} from '@tensorflow/tfjs-core';\n\nconst ENV = env();\n\n/**\n * True if SIMD is supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag(\n    // This typed array passed in to WebAssembly.validate is WebAssembly binary\n    // code. In this case it is a small program that contains SIMD\n    // instructions.\n    'WASM_HAS_SIMD_SUPPORT', async () => WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0, 0, 0, 1,  4, 1,   96, 0,  0, 3,\n      2, 1,  0,   10,  9, 1, 7, 0, 65, 0, 253, 15, 26, 11\n    ])));\n\n/**\n * True if threads are supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag('WASM_HAS_MULTITHREAD_SUPPORT', async () => {\n  // TODO(annxingyuan): Enable node support once this is resolved:\n  // https://github.com/tensorflow/tfjs/issues/3830\n  if (ENV.get('IS_NODE')) {\n    return false;\n  }\n\n  try {\n    // Test for transferability of SABs (needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    // This typed array is a WebAssembly program containing threaded\n    // instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n});\n","\nvar WasmBackendModuleThreadedSimd = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModuleThreadedSimd) {\n  WasmBackendModuleThreadedSimd = WasmBackendModuleThreadedSimd || {};\n\nfunction GROWABLE_HEAP_I8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP8}function GROWABLE_HEAP_U8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU8}function GROWABLE_HEAP_I32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP32}function GROWABLE_HEAP_U32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU32}function GROWABLE_HEAP_F64(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF64}var Module=typeof WasmBackendModuleThreadedSimd!==\"undefined\"?WasmBackendModuleThreadedSimd:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var ENVIRONMENT_IS_PTHREAD=Module[\"ENVIRONMENT_IS_PTHREAD\"]||false;if(ENVIRONMENT_IS_PTHREAD){buffer=Module[\"buffer\"]}var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"};var nodeWorkerThreads;try{nodeWorkerThreads=require(\"worker_threads\")}catch(e){console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?');throw e}global.Worker=nodeWorkerThreads.Worker}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(typeof _scriptDir !== \"undefined\" && _scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}if(ENVIRONMENT_IS_NODE){read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret}}else{read_=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}if(ENVIRONMENT_IS_NODE){if(typeof performance===\"undefined\"){global.performance=require(\"perf_hooks\").performance}}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var Atomics_load=Atomics.load;var Atomics_store=Atomics.store;var Atomics_compareExchange=Atomics.compareExchange;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var wasmModule;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var str=\"\";while(!(idx>=endIdx)){var u0=heap[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(GROWABLE_HEAP_U8(),ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,GROWABLE_HEAP_U8(),outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}function writeArrayToMemory(array,buffer){GROWABLE_HEAP_I8().set(array,buffer)}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;if(ENVIRONMENT_IS_PTHREAD){wasmMemory=Module[\"wasmMemory\"];buffer=Module[\"buffer\"]}else{if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_MEMORY/65536,\"maximum\":2147483648/65536,\"shared\":true});if(!(wasmMemory.buffer instanceof SharedArrayBuffer)){err(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\");if(ENVIRONMENT_IS_NODE){console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\")}throw Error(\"bad memory\")}}}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;if(!ENVIRONMENT_IS_PTHREAD)__ATINIT__.push({func:function(){___wasm_call_ctors()}});function preRun(){if(ENVIRONMENT_IS_PTHREAD)return;if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(ENVIRONMENT_IS_PTHREAD)return;callRuntimeCallbacks(__ATINIT__)}function preMain(){if(ENVIRONMENT_IS_PTHREAD)return;callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){if(ENVIRONMENT_IS_PTHREAD)return;runtimeExited=true}function postRun(){if(ENVIRONMENT_IS_PTHREAD)return;if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){assert(!ENVIRONMENT_IS_PTHREAD,\"addRunDependency cannot be used in a pthread worker\");runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}if(ENVIRONMENT_IS_PTHREAD)console.error(\"Pthread aborting at \"+(new Error).stack);what+=\"\";err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}function hasPrefix(str,prefix){return String.prototype.startsWith?str.startsWith(prefix):str.indexOf(prefix)===0}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return hasPrefix(filename,dataURIPrefix)}var fileURIPrefix=\"file://\";function isFileURI(filename){return hasPrefix(filename,fileURIPrefix)}var wasmBinaryFile=\"tfjs-backend-wasm-threaded-simd.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmTable=Module[\"asm\"][\"F\"];wasmModule=module;if(!ENVIRONMENT_IS_PTHREAD){var numWorkersToLoad=PThread.unusedWorkers.length;PThread.unusedWorkers.forEach(function(w){PThread.loadWasmModuleToWorker(w,function(){if(!--numWorkersToLoad)removeRunDependency(\"wasm-instantiate\")})})}}if(!ENVIRONMENT_IS_PTHREAD){addRunDependency(\"wasm-instantiate\")}function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"],output[\"module\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}var ASM_CONSTS={9816:function(){throw\"Canceled!\"},9834:function($0,$1){setTimeout(function(){__emscripten_do_dispatch_to_thread($0,$1)},0)}};function initPthreadsJS(){PThread.initRuntime()}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){wasmTable.get(func)()}else{wasmTable.get(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function _emscripten_futex_wake(addr,count){if(addr<=0||addr>GROWABLE_HEAP_I8().length||addr&3!=0||count<0)return-28;if(count==0)return 0;if(count>=2147483647)count=Infinity;var mainThreadWaitAddress=Atomics.load(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2);var mainThreadWoken=0;if(mainThreadWaitAddress==addr){var loadedAddr=Atomics.compareExchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,mainThreadWaitAddress,0);if(loadedAddr==mainThreadWaitAddress){--count;mainThreadWoken=1;if(count<=0)return 1}}var ret=Atomics.notify(GROWABLE_HEAP_I32(),addr>>2,count);if(ret>=0)return ret+mainThreadWoken;throw\"Atomics.notify returned an unexpected value \"+ret}Module[\"_emscripten_futex_wake\"]=_emscripten_futex_wake;function killThread(pthread_ptr){if(ENVIRONMENT_IS_PTHREAD)throw\"Internal Error! killThread() can only ever be called from main application thread!\";if(!pthread_ptr)throw\"Internal Error! Null pthread_ptr in killThread!\";GROWABLE_HEAP_I32()[pthread_ptr+12>>2]=0;var pthread=PThread.pthreads[pthread_ptr];pthread.worker.terminate();PThread.freeThreadData(pthread);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(pthread.worker),1);pthread.worker.pthread=undefined}function cancelThread(pthread_ptr){if(ENVIRONMENT_IS_PTHREAD)throw\"Internal Error! cancelThread() can only ever be called from main application thread!\";if(!pthread_ptr)throw\"Internal Error! Null pthread_ptr in cancelThread!\";var pthread=PThread.pthreads[pthread_ptr];pthread.worker.postMessage({\"cmd\":\"cancel\"})}function cleanupThread(pthread_ptr){if(ENVIRONMENT_IS_PTHREAD)throw\"Internal Error! cleanupThread() can only ever be called from main application thread!\";if(!pthread_ptr)throw\"Internal Error! Null pthread_ptr in cleanupThread!\";var pthread=PThread.pthreads[pthread_ptr];if(pthread){GROWABLE_HEAP_I32()[pthread_ptr+12>>2]=0;var worker=pthread.worker;PThread.returnWorkerToPool(worker)}}var PThread={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){var pthreadPoolSize=Math.min(4,Math.max(1,(navigator.hardwareConcurrency||1)/2));for(var i=0;i<pthreadPoolSize;++i){PThread.allocateUnusedWorker()}},initRuntime:function(){var tb=_malloc(228);for(var i=0;i<228/4;++i)GROWABLE_HEAP_U32()[tb/4+i]=0;GROWABLE_HEAP_I32()[tb+12>>2]=tb;var headPtr=tb+152;GROWABLE_HEAP_I32()[headPtr>>2]=headPtr;var tlsMemory=_malloc(512);for(var i=0;i<128;++i)GROWABLE_HEAP_U32()[tlsMemory/4+i]=0;Atomics.store(GROWABLE_HEAP_U32(),tb+100>>2,tlsMemory);Atomics.store(GROWABLE_HEAP_U32(),tb+40>>2,tb);__emscripten_thread_init(tb,!ENVIRONMENT_IS_WORKER,1);_emscripten_register_main_browser_thread_id(tb)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){while(PThread.threadExitHandlers.length>0){PThread.threadExitHandlers.pop()()}if(ENVIRONMENT_IS_PTHREAD&&_pthread_self())___pthread_tsd_run_dtors()},runExitHandlersAndDeinitThread:function(tb,exitCode){Atomics.store(GROWABLE_HEAP_U32(),tb+56>>2,1);Atomics.store(GROWABLE_HEAP_U32(),tb+60>>2,0);PThread.runExitHandlers();Atomics.store(GROWABLE_HEAP_U32(),tb+4>>2,exitCode);Atomics.store(GROWABLE_HEAP_U32(),tb+0>>2,1);_emscripten_futex_wake(tb+0,2147483647);__emscripten_thread_init(0,0,0)},threadExit:function(exitCode){var tb=_pthread_self();if(tb){PThread.runExitHandlersAndDeinitThread(tb,exitCode);if(ENVIRONMENT_IS_PTHREAD){postMessage({\"cmd\":\"exit\"})}}},threadCancel:function(){PThread.runExitHandlersAndDeinitThread(_pthread_self(),-1);postMessage({\"cmd\":\"cancelDone\"})},terminateAllThreads:function(){for(var t in PThread.pthreads){var pthread=PThread.pthreads[t];if(pthread&&pthread.worker){PThread.returnWorkerToPool(pthread.worker)}}PThread.pthreads={};for(var i=0;i<PThread.unusedWorkers.length;++i){var worker=PThread.unusedWorkers[i];worker.terminate()}PThread.unusedWorkers=[];for(var i=0;i<PThread.runningWorkers.length;++i){var worker=PThread.runningWorkers[i];var pthread=worker.pthread;PThread.freeThreadData(pthread);worker.terminate()}PThread.runningWorkers=[]},freeThreadData:function(pthread){if(!pthread)return;if(pthread.threadInfoStruct){var tlsMemory=GROWABLE_HEAP_I32()[pthread.threadInfoStruct+100>>2];GROWABLE_HEAP_I32()[pthread.threadInfoStruct+100>>2]=0;_free(tlsMemory);_free(pthread.threadInfoStruct)}pthread.threadInfoStruct=0;if(pthread.allocatedOwnStack&&pthread.stackBase)_free(pthread.stackBase);pthread.stackBase=0;if(pthread.worker)pthread.worker.pthread=null},returnWorkerToPool:function(worker){PThread.runWithoutMainThreadQueuedCalls(function(){delete PThread.pthreads[worker.pthread.threadInfoStruct];PThread.unusedWorkers.push(worker);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker),1);PThread.freeThreadData(worker.pthread);worker.pthread=undefined})},runWithoutMainThreadQueuedCalls:function(func){GROWABLE_HEAP_I32()[__emscripten_allow_main_runtime_queued_calls>>2]=0;try{func()}finally{GROWABLE_HEAP_I32()[__emscripten_allow_main_runtime_queued_calls>>2]=1}},receiveObjectTransfer:function(data){},loadWasmModuleToWorker:function(worker,onFinishedLoading){worker.onmessage=function(e){var d=e[\"data\"];var cmd=d[\"cmd\"];if(worker.pthread)PThread.currentProxiedOperationCallerThread=worker.pthread.threadInfoStruct;if(d[\"targetThread\"]&&d[\"targetThread\"]!=_pthread_self()){var thread=PThread.pthreads[d.targetThread];if(thread){thread.worker.postMessage(e.data,d[\"transferList\"])}else{console.error('Internal error! Worker sent a message \"'+cmd+'\" to target pthread '+d[\"targetThread\"]+\", but that thread no longer exists!\")}PThread.currentProxiedOperationCallerThread=undefined;return}if(cmd===\"processQueuedMainThreadWork\"){_emscripten_main_thread_process_queued_calls()}else if(cmd===\"spawnThread\"){spawnThread(e.data)}else if(cmd===\"cleanupThread\"){cleanupThread(d[\"thread\"])}else if(cmd===\"killThread\"){killThread(d[\"thread\"])}else if(cmd===\"cancelThread\"){cancelThread(d[\"thread\"])}else if(cmd===\"loaded\"){worker.loaded=true;if(onFinishedLoading)onFinishedLoading(worker);if(worker.runPthread){worker.runPthread();delete worker.runPthread}}else if(cmd===\"print\"){out(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"printErr\"){err(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"alert\"){alert(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"exit\"){var detached=worker.pthread&&Atomics.load(GROWABLE_HEAP_U32(),worker.pthread.threadInfoStruct+64>>2);if(detached){PThread.returnWorkerToPool(worker)}}else if(cmd===\"exitProcess\"){try{exit(d[\"returnCode\"])}catch(e){if(e instanceof ExitStatus)return;throw e}}else if(cmd===\"cancelDone\"){PThread.returnWorkerToPool(worker)}else if(cmd===\"objectTransfer\"){PThread.receiveObjectTransfer(e.data)}else if(e.data.target===\"setimmediate\"){worker.postMessage(e.data)}else{err(\"worker sent an unknown command \"+cmd)}PThread.currentProxiedOperationCallerThread=undefined};worker.onerror=function(e){err(\"pthread sent an error! \"+e.filename+\":\"+e.lineno+\": \"+e.message)};if(ENVIRONMENT_IS_NODE){worker.on(\"message\",function(data){worker.onmessage({data:data})});worker.on(\"error\",function(data){worker.onerror(data)});worker.on(\"exit\",function(data){})}worker.postMessage({\"cmd\":\"load\",\"urlOrBlob\":Module[\"mainScriptUrlOrBlob\"]||_scriptDir,\"wasmMemory\":wasmMemory,\"wasmModule\":wasmModule})},allocateUnusedWorker:function(){var pthreadMainJs=locateFile(\"tfjs-backend-wasm-threaded-simd.worker.js\");PThread.unusedWorkers.push(new Worker(pthreadMainJs))},getNewWorker:function(){if(PThread.unusedWorkers.length==0){PThread.allocateUnusedWorker();PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0])}if(PThread.unusedWorkers.length>0)return PThread.unusedWorkers.pop();else return null},busySpinWait:function(msecs){var t=performance.now()+msecs;while(performance.now()<t){}}};function establishStackSpace(stackTop,stackMax){_emscripten_stack_set_limits(stackTop,stackMax);stackRestore(stackTop)}Module[\"establishStackSpace\"]=establishStackSpace;function getNoExitRuntime(){return noExitRuntime}Module[\"getNoExitRuntime\"]=getNoExitRuntime;function invokeEntryPoint(ptr,arg){return wasmTable.get(ptr)(arg)}Module[\"invokeEntryPoint\"]=invokeEntryPoint;function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+UTF8ToString(condition)+\", at: \"+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"])}function ___call_main(argc,argv){var returnCode=_main(argc,argv)}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){_emscripten_get_now=function(){var t=process[\"hrtime\"]();return t[0]*1e3+t[1]/1e6}}else if(ENVIRONMENT_IS_PTHREAD){_emscripten_get_now=function(){return performance.now()-Module[\"__performance_now_clock_drift\"]}}else if(typeof dateNow!==\"undefined\"){_emscripten_get_now=dateNow}else _emscripten_get_now=function(){return performance.now()};function setErrNo(value){GROWABLE_HEAP_I32()[___errno_location()>>2]=value;return value}function _atexit(func,arg){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(1,1,func,arg)}function __emscripten_notify_thread_queue(targetThreadId,mainThreadId){if(targetThreadId==mainThreadId){postMessage({\"cmd\":\"processQueuedMainThreadWork\"})}else if(ENVIRONMENT_IS_PTHREAD){postMessage({\"targetThread\":targetThreadId,\"cmd\":\"processThreadQueue\"})}else{var pthread=PThread.pthreads[targetThreadId];var worker=pthread&&pthread.worker;if(!worker){return}worker.postMessage({\"cmd\":\"processThreadQueue\"})}return 1}function _abort(){abort()}function _emscripten_asm_const_int(code,sigPtr,argbuf){var args=readAsmConstArgs(sigPtr,argbuf);return ASM_CONSTS[code].apply(null,args)}function _emscripten_conditional_set_current_thread_status(expectedStatus,newStatus){}function _emscripten_futex_wait(addr,val,timeout){if(addr<=0||addr>GROWABLE_HEAP_I8().length||addr&3!=0)return-28;if(!ENVIRONMENT_IS_WEB){var ret=Atomics.wait(GROWABLE_HEAP_I32(),addr>>2,val,timeout);if(ret===\"timed-out\")return-73;if(ret===\"not-equal\")return-6;if(ret===\"ok\")return 0;throw\"Atomics.wait returned an unexpected value \"+ret}else{if(Atomics.load(GROWABLE_HEAP_I32(),addr>>2)!=val){return-6}var tNow=performance.now();var tEnd=tNow+timeout;var lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,addr);while(1){tNow=performance.now();if(tNow>tEnd){lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,0);return-73}lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,0);if(lastAddr==0){break}_emscripten_main_thread_process_queued_calls();if(Atomics.load(GROWABLE_HEAP_I32(),addr>>2)!=val){return-6}lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,addr)}return 0}}function _emscripten_memcpy_big(dest,src,num){GROWABLE_HEAP_U8().copyWithin(dest,src,src+num)}function _emscripten_num_logical_cores(){if(ENVIRONMENT_IS_NODE)return require(\"os\").cpus().length;return navigator[\"hardwareConcurrency\"]}function _emscripten_proxy_to_main_thread_js(index,sync){var numCallArgs=arguments.length-2;var stack=stackSave();var serializedNumCallArgs=numCallArgs;var args=stackAlloc(serializedNumCallArgs*8);var b=args>>3;for(var i=0;i<numCallArgs;i++){var arg=arguments[2+i];GROWABLE_HEAP_F64()[b+i]=arg}var ret=_emscripten_run_in_main_runtime_thread_js(index,serializedNumCallArgs,args,sync);stackRestore(stack);return ret}var _emscripten_receive_on_main_thread_js_callArgs=[];var readAsmConstArgsArray=[];function readAsmConstArgs(sigPtr,buf){readAsmConstArgsArray.length=0;var ch;buf>>=2;while(ch=GROWABLE_HEAP_U8()[sigPtr++]){var double=ch<105;if(double&&buf&1)buf++;readAsmConstArgsArray.push(double?GROWABLE_HEAP_F64()[buf++>>1]:GROWABLE_HEAP_I32()[buf]);++buf}return readAsmConstArgsArray}function _emscripten_receive_on_main_thread_js(index,numCallArgs,args){_emscripten_receive_on_main_thread_js_callArgs.length=numCallArgs;var b=args>>3;for(var i=0;i<numCallArgs;i++){_emscripten_receive_on_main_thread_js_callArgs[i]=GROWABLE_HEAP_F64()[b+i]}var isEmAsmConst=index<0;var func=!isEmAsmConst?proxiedFunctionTable[index]:ASM_CONSTS[-index-1];return func.apply(null,_emscripten_receive_on_main_thread_js_callArgs)}function _emscripten_get_heap_size(){return GROWABLE_HEAP_U8().length}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=_emscripten_get_heap_size();if(requestedSize<=oldSize){return false}var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var JSEvents={inEventHandler:0,removeAllEventListeners:function(){for(var i=JSEvents.eventHandlers.length-1;i>=0;--i){JSEvents._removeHandler(i)}JSEvents.eventHandlers=[];JSEvents.deferredCalls=[]},registerRemoveEventListeners:function(){if(!JSEvents.removeEventListenersRegistered){__ATEXIT__.push(JSEvents.removeAllEventListeners);JSEvents.removeEventListenersRegistered=true}},deferredCalls:[],deferCall:function(targetFunction,precedence,argsList){function arraysHaveEqualContent(arrA,arrB){if(arrA.length!=arrB.length)return false;for(var i in arrA){if(arrA[i]!=arrB[i])return false}return true}for(var i in JSEvents.deferredCalls){var call=JSEvents.deferredCalls[i];if(call.targetFunction==targetFunction&&arraysHaveEqualContent(call.argsList,argsList)){return}}JSEvents.deferredCalls.push({targetFunction:targetFunction,precedence:precedence,argsList:argsList});JSEvents.deferredCalls.sort(function(x,y){return x.precedence<y.precedence})},removeDeferredCalls:function(targetFunction){for(var i=0;i<JSEvents.deferredCalls.length;++i){if(JSEvents.deferredCalls[i].targetFunction==targetFunction){JSEvents.deferredCalls.splice(i,1);--i}}},canPerformEventHandlerRequests:function(){return JSEvents.inEventHandler&&JSEvents.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!JSEvents.canPerformEventHandlerRequests()){return}for(var i=0;i<JSEvents.deferredCalls.length;++i){var call=JSEvents.deferredCalls[i];JSEvents.deferredCalls.splice(i,1);--i;call.targetFunction.apply(null,call.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(target,eventTypeString){for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==target&&(!eventTypeString||eventTypeString==JSEvents.eventHandlers[i].eventTypeString)){JSEvents._removeHandler(i--)}}},_removeHandler:function(i){var h=JSEvents.eventHandlers[i];h.target.removeEventListener(h.eventTypeString,h.eventListenerFunc,h.useCapture);JSEvents.eventHandlers.splice(i,1)},registerOrRemoveHandler:function(eventHandler){var jsEventHandler=function jsEventHandler(event){++JSEvents.inEventHandler;JSEvents.currentEventHandler=eventHandler;JSEvents.runDeferredCalls();eventHandler.handlerFunc(event);JSEvents.runDeferredCalls();--JSEvents.inEventHandler};if(eventHandler.callbackfunc){eventHandler.eventListenerFunc=jsEventHandler;eventHandler.target.addEventListener(eventHandler.eventTypeString,jsEventHandler,eventHandler.useCapture);JSEvents.eventHandlers.push(eventHandler);JSEvents.registerRemoveEventListeners()}else{for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==eventHandler.target&&JSEvents.eventHandlers[i].eventTypeString==eventHandler.eventTypeString){JSEvents._removeHandler(i--)}}}},queueEventHandlerOnThread_iiii:function(targetThread,eventHandlerFunc,eventTypeId,eventData,userData){var stackTop=stackSave();var varargs=stackAlloc(12);GROWABLE_HEAP_I32()[varargs>>2]=eventTypeId;GROWABLE_HEAP_I32()[varargs+4>>2]=eventData;GROWABLE_HEAP_I32()[varargs+8>>2]=userData;__emscripten_call_on_thread(0,targetThread,637534208,eventHandlerFunc,eventData,varargs);stackRestore(stackTop)},getTargetThreadForEventCallback:function(targetThread){switch(targetThread){case 1:return 0;case 2:return PThread.currentProxiedOperationCallerThread;default:return targetThread}},getNodeNameForTarget:function(target){if(!target)return\"\";if(target==window)return\"#window\";if(target==screen)return\"#screen\";return target&&target.nodeName?target.nodeName:\"\"},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function stringToNewUTF8(jsString){var length=lengthBytesUTF8(jsString)+1;var cString=_malloc(length);stringToUTF8(jsString,cString,length);return cString}function _emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread,targetCanvas,width,height){var stackTop=stackSave();var varargs=stackAlloc(12);var targetCanvasPtr=0;if(targetCanvas){targetCanvasPtr=stringToNewUTF8(targetCanvas)}GROWABLE_HEAP_I32()[varargs>>2]=targetCanvasPtr;GROWABLE_HEAP_I32()[varargs+4>>2]=width;GROWABLE_HEAP_I32()[varargs+8>>2]=height;__emscripten_call_on_thread(0,targetThread,657457152,0,targetCanvasPtr,varargs);stackRestore(stackTop)}function _emscripten_set_offscreencanvas_size_on_target_thread(targetThread,targetCanvas,width,height){targetCanvas=targetCanvas?UTF8ToString(targetCanvas):\"\";_emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread,targetCanvas,width,height)}function maybeCStringToJsString(cString){return cString>2?UTF8ToString(cString):cString}var specialHTMLTargets=[0,typeof document!==\"undefined\"?document:0,typeof window!==\"undefined\"?window:0];function findEventTarget(target){target=maybeCStringToJsString(target);var domElement=specialHTMLTargets[target]||(typeof document!==\"undefined\"?document.querySelector(target):undefined);return domElement}function findCanvasEventTarget(target){return findEventTarget(target)}function _emscripten_set_canvas_element_size_calling_thread(target,width,height){var canvas=findCanvasEventTarget(target);if(!canvas)return-4;if(canvas.canvasSharedPtr){GROWABLE_HEAP_I32()[canvas.canvasSharedPtr>>2]=width;GROWABLE_HEAP_I32()[canvas.canvasSharedPtr+4>>2]=height}if(canvas.offscreenCanvas||!canvas.controlTransferredOffscreen){if(canvas.offscreenCanvas)canvas=canvas.offscreenCanvas;var autoResizeViewport=false;if(canvas.GLctxObject&&canvas.GLctxObject.GLctx){var prevViewport=canvas.GLctxObject.GLctx.getParameter(2978);autoResizeViewport=prevViewport[0]===0&&prevViewport[1]===0&&prevViewport[2]===canvas.width&&prevViewport[3]===canvas.height}canvas.width=width;canvas.height=height;if(autoResizeViewport){canvas.GLctxObject.GLctx.viewport(0,0,width,height)}}else if(canvas.canvasSharedPtr){var targetThread=GROWABLE_HEAP_I32()[canvas.canvasSharedPtr+8>>2];_emscripten_set_offscreencanvas_size_on_target_thread(targetThread,target,width,height);return 1}else{return-4}return 0}function _emscripten_set_canvas_element_size_main_thread(target,width,height){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(2,1,target,width,height);return _emscripten_set_canvas_element_size_calling_thread(target,width,height)}function _emscripten_set_canvas_element_size(target,width,height){var canvas=findCanvasEventTarget(target);if(canvas){return _emscripten_set_canvas_element_size_calling_thread(target,width,height)}else{return _emscripten_set_canvas_element_size_main_thread(target,width,height)}}function _emscripten_set_current_thread_status(newStatus){}function _emscripten_set_thread_name(threadId,name){}function __webgl_enable_ANGLE_instanced_arrays(ctx){var ext=ctx.getExtension(\"ANGLE_instanced_arrays\");if(ext){ctx[\"vertexAttribDivisor\"]=function(index,divisor){ext[\"vertexAttribDivisorANGLE\"](index,divisor)};ctx[\"drawArraysInstanced\"]=function(mode,first,count,primcount){ext[\"drawArraysInstancedANGLE\"](mode,first,count,primcount)};ctx[\"drawElementsInstanced\"]=function(mode,count,type,indices,primcount){ext[\"drawElementsInstancedANGLE\"](mode,count,type,indices,primcount)};return 1}}function __webgl_enable_OES_vertex_array_object(ctx){var ext=ctx.getExtension(\"OES_vertex_array_object\");if(ext){ctx[\"createVertexArray\"]=function(){return ext[\"createVertexArrayOES\"]()};ctx[\"deleteVertexArray\"]=function(vao){ext[\"deleteVertexArrayOES\"](vao)};ctx[\"bindVertexArray\"]=function(vao){ext[\"bindVertexArrayOES\"](vao)};ctx[\"isVertexArray\"]=function(vao){return ext[\"isVertexArrayOES\"](vao)};return 1}}function __webgl_enable_WEBGL_draw_buffers(ctx){var ext=ctx.getExtension(\"WEBGL_draw_buffers\");if(ext){ctx[\"drawBuffers\"]=function(n,bufs){ext[\"drawBuffersWEBGL\"](n,bufs)};return 1}}function __webgl_enable_WEBGL_multi_draw(ctx){return!!(ctx.multiDrawWebgl=ctx.getExtension(\"WEBGL_multi_draw\"))}var GL={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function recordError(errorCode){if(!GL.lastError){GL.lastError=errorCode}},getNewId:function(table){var ret=GL.counter++;for(var i=table.length;i<ret;i++){table[i]=null}return ret},getSource:function(shader,count,string,length){var source=\"\";for(var i=0;i<count;++i){var len=length?GROWABLE_HEAP_I32()[length+i*4>>2]:-1;source+=UTF8ToString(GROWABLE_HEAP_I32()[string+i*4>>2],len<0?undefined:len)}return source},createContext:function(canvas,webGLContextAttributes){var ctx=canvas.getContext(\"webgl\",webGLContextAttributes);if(!ctx)return 0;var handle=GL.registerContext(ctx,webGLContextAttributes);return handle},registerContext:function(ctx,webGLContextAttributes){var handle=_malloc(8);GROWABLE_HEAP_I32()[handle+4>>2]=_pthread_self();var context={handle:handle,attributes:webGLContextAttributes,version:webGLContextAttributes.majorVersion,GLctx:ctx};if(ctx.canvas)ctx.canvas.GLctxObject=context;GL.contexts[handle]=context;if(typeof webGLContextAttributes.enableExtensionsByDefault===\"undefined\"||webGLContextAttributes.enableExtensionsByDefault){GL.initExtensions(context)}return handle},makeContextCurrent:function(contextHandle){GL.currentContext=GL.contexts[contextHandle];Module.ctx=GLctx=GL.currentContext&&GL.currentContext.GLctx;return!(contextHandle&&!GLctx)},getContext:function(contextHandle){return GL.contexts[contextHandle]},deleteContext:function(contextHandle){if(GL.currentContext===GL.contexts[contextHandle])GL.currentContext=null;if(typeof JSEvents===\"object\")JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);if(GL.contexts[contextHandle]&&GL.contexts[contextHandle].GLctx.canvas)GL.contexts[contextHandle].GLctx.canvas.GLctxObject=undefined;_free(GL.contexts[contextHandle].handle);GL.contexts[contextHandle]=null},initExtensions:function(context){if(!context)context=GL.currentContext;if(context.initExtensionsDone)return;context.initExtensionsDone=true;var GLctx=context.GLctx;__webgl_enable_ANGLE_instanced_arrays(GLctx);__webgl_enable_OES_vertex_array_object(GLctx);__webgl_enable_WEBGL_draw_buffers(GLctx);GLctx.disjointTimerQueryExt=GLctx.getExtension(\"EXT_disjoint_timer_query\");__webgl_enable_WEBGL_multi_draw(GLctx);var exts=GLctx.getSupportedExtensions()||[];exts.forEach(function(ext){if(ext.indexOf(\"lose_context\")<0&&ext.indexOf(\"debug\")<0){GLctx.getExtension(ext)}})},populateUniformTable:function(program){var p=GL.programs[program];var ptable=GL.programInfos[program]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1};var utable=ptable.uniforms;var numUniforms=GLctx.getProgramParameter(p,35718);for(var i=0;i<numUniforms;++i){var u=GLctx.getActiveUniform(p,i);var name=u.name;ptable.maxUniformLength=Math.max(ptable.maxUniformLength,name.length+1);if(name.slice(-1)==\"]\"){name=name.slice(0,name.lastIndexOf(\"[\"))}var loc=GLctx.getUniformLocation(p,name);if(loc){var id=GL.getNewId(GL.uniforms);utable[name]=[u.size,id];GL.uniforms[id]=loc;for(var j=1;j<u.size;++j){var n=name+\"[\"+j+\"]\";loc=GLctx.getUniformLocation(p,n);id=GL.getNewId(GL.uniforms);GL.uniforms[id]=loc}}}}};var __emscripten_webgl_power_preferences=[\"default\",\"low-power\",\"high-performance\"];function _emscripten_webgl_do_create_context(target,attributes){var a=attributes>>2;var powerPreference=GROWABLE_HEAP_I32()[a+(24>>2)];var contextAttributes={\"alpha\":!!GROWABLE_HEAP_I32()[a+(0>>2)],\"depth\":!!GROWABLE_HEAP_I32()[a+(4>>2)],\"stencil\":!!GROWABLE_HEAP_I32()[a+(8>>2)],\"antialias\":!!GROWABLE_HEAP_I32()[a+(12>>2)],\"premultipliedAlpha\":!!GROWABLE_HEAP_I32()[a+(16>>2)],\"preserveDrawingBuffer\":!!GROWABLE_HEAP_I32()[a+(20>>2)],\"powerPreference\":__emscripten_webgl_power_preferences[powerPreference],\"failIfMajorPerformanceCaveat\":!!GROWABLE_HEAP_I32()[a+(28>>2)],majorVersion:GROWABLE_HEAP_I32()[a+(32>>2)],minorVersion:GROWABLE_HEAP_I32()[a+(36>>2)],enableExtensionsByDefault:GROWABLE_HEAP_I32()[a+(40>>2)],explicitSwapControl:GROWABLE_HEAP_I32()[a+(44>>2)],proxyContextToMainThread:GROWABLE_HEAP_I32()[a+(48>>2)],renderViaOffscreenBackBuffer:GROWABLE_HEAP_I32()[a+(52>>2)]};var canvas=findCanvasEventTarget(target);if(!canvas){return 0}if(contextAttributes.explicitSwapControl){return 0}var contextHandle=GL.createContext(canvas,contextAttributes);return contextHandle}function _emscripten_webgl_create_context(a0,a1){return _emscripten_webgl_do_create_context(a0,a1)}var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=GROWABLE_HEAP_I32()[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},get64:function(low,high){return low}};function _fd_close(fd){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(3,1,fd);return 0}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(4,1,fd,offset_low,offset_high,whence,newOffset)}function _fd_write(fd,iov,iovcnt,pnum){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(5,1,fd,iov,iovcnt,pnum);var num=0;for(var i=0;i<iovcnt;i++){var ptr=GROWABLE_HEAP_I32()[iov+i*8>>2];var len=GROWABLE_HEAP_I32()[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(fd,GROWABLE_HEAP_U8()[ptr+j])}num+=len}GROWABLE_HEAP_I32()[pnum>>2]=num;return 0}function _pthread_cleanup_pop(execute){var routine=PThread.threadExitHandlers.pop();if(execute)routine()}function _pthread_cleanup_push(routine,arg){PThread.threadExitHandlers.push(function(){wasmTable.get(routine)(arg)})}function spawnThread(threadParams){if(ENVIRONMENT_IS_PTHREAD)throw\"Internal Error! spawnThread() can only ever be called from main application thread!\";var worker=PThread.getNewWorker();if(worker.pthread!==undefined)throw\"Internal error!\";if(!threadParams.pthread_ptr)throw\"Internal error, no pthread ptr!\";PThread.runningWorkers.push(worker);var tlsMemory=_malloc(128*4);for(var i=0;i<128;++i){GROWABLE_HEAP_I32()[tlsMemory+i*4>>2]=0}var stackHigh=threadParams.stackBase+threadParams.stackSize;var pthread=PThread.pthreads[threadParams.pthread_ptr]={worker:worker,stackBase:threadParams.stackBase,stackSize:threadParams.stackSize,allocatedOwnStack:threadParams.allocatedOwnStack,threadInfoStruct:threadParams.pthread_ptr};var tis=pthread.threadInfoStruct>>2;Atomics.store(GROWABLE_HEAP_U32(),tis+(64>>2),threadParams.detached);Atomics.store(GROWABLE_HEAP_U32(),tis+(100>>2),tlsMemory);Atomics.store(GROWABLE_HEAP_U32(),tis+(40>>2),pthread.threadInfoStruct);Atomics.store(GROWABLE_HEAP_U32(),tis+(80>>2),threadParams.stackSize);Atomics.store(GROWABLE_HEAP_U32(),tis+(76>>2),stackHigh);Atomics.store(GROWABLE_HEAP_U32(),tis+(104>>2),threadParams.stackSize);Atomics.store(GROWABLE_HEAP_U32(),tis+(104+8>>2),stackHigh);Atomics.store(GROWABLE_HEAP_U32(),tis+(104+12>>2),threadParams.detached);var global_libc=_emscripten_get_global_libc();var global_locale=global_libc+40;Atomics.store(GROWABLE_HEAP_U32(),tis+(172>>2),global_locale);worker.pthread=pthread;var msg={\"cmd\":\"run\",\"start_routine\":threadParams.startRoutine,\"arg\":threadParams.arg,\"threadInfoStruct\":threadParams.pthread_ptr,\"stackBase\":threadParams.stackBase,\"stackSize\":threadParams.stackSize};worker.runPthread=function(){msg.time=performance.now();worker.postMessage(msg,threadParams.transferList)};if(worker.loaded){worker.runPthread();delete worker.runPthread}}function _pthread_create(pthread_ptr,attr,start_routine,arg){if(typeof SharedArrayBuffer===\"undefined\"){err(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\");return 6}if(!pthread_ptr){err(\"pthread_create called with a null thread pointer!\");return 28}var transferList=[];var error=0;if(ENVIRONMENT_IS_PTHREAD&&(transferList.length===0||error)){return _emscripten_sync_run_in_main_thread_4(687865856,pthread_ptr,attr,start_routine,arg)}if(error)return error;var stackSize=0;var stackBase=0;var detached=0;if(attr&&attr!=-1){stackSize=GROWABLE_HEAP_I32()[attr>>2];stackSize+=81920;stackBase=GROWABLE_HEAP_I32()[attr+8>>2];detached=GROWABLE_HEAP_I32()[attr+12>>2]!==0}else{stackSize=2097152}var allocatedOwnStack=stackBase==0;if(allocatedOwnStack){stackBase=_memalign(16,stackSize)}else{stackBase-=stackSize;assert(stackBase>0)}var threadInfoStruct=_malloc(228);for(var i=0;i<228>>2;++i)GROWABLE_HEAP_U32()[(threadInfoStruct>>2)+i]=0;GROWABLE_HEAP_I32()[pthread_ptr>>2]=threadInfoStruct;GROWABLE_HEAP_I32()[threadInfoStruct+12>>2]=threadInfoStruct;var headPtr=threadInfoStruct+152;GROWABLE_HEAP_I32()[headPtr>>2]=headPtr;var threadParams={stackBase:stackBase,stackSize:stackSize,allocatedOwnStack:allocatedOwnStack,detached:detached,startRoutine:start_routine,pthread_ptr:threadInfoStruct,arg:arg,transferList:transferList};if(ENVIRONMENT_IS_PTHREAD){threadParams.cmd=\"spawnThread\";postMessage(threadParams,transferList)}else{spawnThread(threadParams)}return 0}function _sysconf(name){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(6,1,name);switch(name){case 30:return 16384;case 85:var maxHeapSize=2147483648;return maxHeapSize/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator===\"object\")return navigator[\"hardwareConcurrency\"]||1;return 1}}setErrNo(28);return-1}if(!ENVIRONMENT_IS_PTHREAD)PThread.initMainThreadBlock();var GLctx;var proxiedFunctionTable=[null,_atexit,_emscripten_set_canvas_element_size_main_thread,_fd_close,_fd_seek,_fd_write,_sysconf];var asmLibraryArg={\"e\":___assert_fail,\"r\":___call_main,\"x\":__emscripten_notify_thread_queue,\"b\":_abort,\"y\":_emscripten_asm_const_int,\"j\":_emscripten_conditional_set_current_thread_status,\"c\":_emscripten_futex_wait,\"d\":_emscripten_futex_wake,\"f\":_emscripten_get_now,\"p\":_emscripten_memcpy_big,\"z\":_emscripten_num_logical_cores,\"u\":_emscripten_receive_on_main_thread_js,\"q\":_emscripten_resize_heap,\"v\":_emscripten_set_canvas_element_size,\"i\":_emscripten_set_current_thread_status,\"t\":_emscripten_set_thread_name,\"w\":_emscripten_webgl_create_context,\"m\":_fd_close,\"n\":_fd_seek,\"g\":_fd_write,\"o\":initPthreadsJS,\"a\":wasmMemory||Module[\"wasmMemory\"],\"k\":_pthread_cleanup_pop,\"l\":_pthread_cleanup_push,\"h\":_pthread_create,\"s\":_sysconf};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"A\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"B\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"C\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"D\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"E\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"G\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"H\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"I\"]).apply(null,arguments)};var _All=Module[\"_All\"]=function(){return(_All=Module[\"_All\"]=Module[\"asm\"][\"J\"]).apply(null,arguments)};var _Any=Module[\"_Any\"]=function(){return(_Any=Module[\"_Any\"]=Module[\"asm\"][\"K\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"L\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"M\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"N\"]).apply(null,arguments)};var _Ceil=Module[\"_Ceil\"]=function(){return(_Ceil=Module[\"_Ceil\"]=Module[\"asm\"][\"O\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"P\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"Q\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"S\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"T\"]).apply(null,arguments)};var _Cumsum=Module[\"_Cumsum\"]=function(){return(_Cumsum=Module[\"_Cumsum\"]=Module[\"asm\"][\"U\"]).apply(null,arguments)};var _DepthToSpace=Module[\"_DepthToSpace\"]=function(){return(_DepthToSpace=Module[\"_DepthToSpace\"]=Module[\"asm\"][\"V\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"W\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"X\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"Y\"]).apply(null,arguments)};var _FlipLeftRight=Module[\"_FlipLeftRight\"]=function(){return(_FlipLeftRight=Module[\"_FlipLeftRight\"]=Module[\"asm\"][\"Z\"]).apply(null,arguments)};var _Floor=Module[\"_Floor\"]=function(){return(_Floor=Module[\"_Floor\"]=Module[\"asm\"][\"_\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"$\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"aa\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"ba\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"ca\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"da\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"ea\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"fa\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"ga\"]).apply(null,arguments)};var _LeakyRelu=Module[\"_LeakyRelu\"]=function(){return(_LeakyRelu=Module[\"_LeakyRelu\"]=Module[\"asm\"][\"ha\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"ia\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"ja\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"ka\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"la\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"ma\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"na\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"oa\"]).apply(null,arguments)};var _Mean=Module[\"_Mean\"]=function(){return(_Mean=Module[\"_Mean\"]=Module[\"asm\"][\"pa\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"qa\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"ra\"]).apply(null,arguments)};var _MirrorPad=Module[\"_MirrorPad\"]=function(){return(_MirrorPad=Module[\"_MirrorPad\"]=Module[\"asm\"][\"sa\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"ta\"]).apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return(_Neg=Module[\"_Neg\"]=Module[\"asm\"][\"ua\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"va\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"wa\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"xa\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"ya\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"za\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"Aa\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"Ba\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"Ca\"]).apply(null,arguments)};var _Prod=Module[\"_Prod\"]=function(){return(_Prod=Module[\"_Prod\"]=Module[\"asm\"][\"Da\"]).apply(null,arguments)};var _RealDiv=Module[\"_RealDiv\"]=function(){return(_RealDiv=Module[\"_RealDiv\"]=Module[\"asm\"][\"Ea\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"Fa\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"Ga\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"Ha\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"Ia\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"Ja\"]).apply(null,arguments)};var _Round=Module[\"_Round\"]=function(){return(_Round=Module[\"_Round\"]=Module[\"asm\"][\"Ka\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"La\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"Ma\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"Na\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"Oa\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"Pa\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"Qa\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"Ra\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"Sa\"]).apply(null,arguments)};var _SquaredDifference=Module[\"_SquaredDifference\"]=function(){return(_SquaredDifference=Module[\"_SquaredDifference\"]=Module[\"asm\"][\"Ta\"]).apply(null,arguments)};var _Step=Module[\"_Step\"]=function(){return(_Step=Module[\"_Step\"]=Module[\"asm\"][\"Ua\"]).apply(null,arguments)};var _StridedSlice=Module[\"_StridedSlice\"]=function(){return(_StridedSlice=Module[\"_StridedSlice\"]=Module[\"asm\"][\"Va\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"Wa\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"Xa\"]).apply(null,arguments)};var _Tan=Module[\"_Tan\"]=function(){return(_Tan=Module[\"_Tan\"]=Module[\"asm\"][\"Ya\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"Za\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"_a\"]).apply(null,arguments)};var _TopK=Module[\"_TopK\"]=function(){return(_TopK=Module[\"_TopK\"]=Module[\"asm\"][\"$a\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"ab\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"bb\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"cb\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"db\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"eb\"]).apply(null,arguments)};var _emscripten_get_global_libc=Module[\"_emscripten_get_global_libc\"]=function(){return(_emscripten_get_global_libc=Module[\"_emscripten_get_global_libc\"]=Module[\"asm\"][\"fb\"]).apply(null,arguments)};var _pthread_self=Module[\"_pthread_self\"]=function(){return(_pthread_self=Module[\"_pthread_self\"]=Module[\"asm\"][\"gb\"]).apply(null,arguments)};var ___pthread_tsd_run_dtors=Module[\"___pthread_tsd_run_dtors\"]=function(){return(___pthread_tsd_run_dtors=Module[\"___pthread_tsd_run_dtors\"]=Module[\"asm\"][\"hb\"]).apply(null,arguments)};var _emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=function(){return(_emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=Module[\"asm\"][\"ib\"]).apply(null,arguments)};var _emscripten_current_thread_process_queued_calls=Module[\"_emscripten_current_thread_process_queued_calls\"]=function(){return(_emscripten_current_thread_process_queued_calls=Module[\"_emscripten_current_thread_process_queued_calls\"]=Module[\"asm\"][\"jb\"]).apply(null,arguments)};var _emscripten_register_main_browser_thread_id=Module[\"_emscripten_register_main_browser_thread_id\"]=function(){return(_emscripten_register_main_browser_thread_id=Module[\"_emscripten_register_main_browser_thread_id\"]=Module[\"asm\"][\"kb\"]).apply(null,arguments)};var __emscripten_do_dispatch_to_thread=Module[\"__emscripten_do_dispatch_to_thread\"]=function(){return(__emscripten_do_dispatch_to_thread=Module[\"__emscripten_do_dispatch_to_thread\"]=Module[\"asm\"][\"lb\"]).apply(null,arguments)};var _emscripten_sync_run_in_main_thread_4=Module[\"_emscripten_sync_run_in_main_thread_4\"]=function(){return(_emscripten_sync_run_in_main_thread_4=Module[\"_emscripten_sync_run_in_main_thread_4\"]=Module[\"asm\"][\"mb\"]).apply(null,arguments)};var _emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=function(){return(_emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=Module[\"asm\"][\"nb\"]).apply(null,arguments)};var __emscripten_call_on_thread=Module[\"__emscripten_call_on_thread\"]=function(){return(__emscripten_call_on_thread=Module[\"__emscripten_call_on_thread\"]=Module[\"asm\"][\"ob\"]).apply(null,arguments)};var _emscripten_tls_init=Module[\"_emscripten_tls_init\"]=function(){return(_emscripten_tls_init=Module[\"_emscripten_tls_init\"]=Module[\"asm\"][\"pb\"]).apply(null,arguments)};var __emscripten_thread_init=Module[\"__emscripten_thread_init\"]=function(){return(__emscripten_thread_init=Module[\"__emscripten_thread_init\"]=Module[\"asm\"][\"qb\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"rb\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"sb\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"tb\"]).apply(null,arguments)};var _emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=function(){return(_emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=Module[\"asm\"][\"ub\"]).apply(null,arguments)};var _memalign=Module[\"_memalign\"]=function(){return(_memalign=Module[\"_memalign\"]=Module[\"asm\"][\"vb\"]).apply(null,arguments)};var __emscripten_allow_main_runtime_queued_calls=Module[\"__emscripten_allow_main_runtime_queued_calls\"]=9808;var __emscripten_main_thread_futex=Module[\"__emscripten_main_thread_futex\"]=11432;Module[\"cwrap\"]=cwrap;Module[\"PThread\"]=PThread;Module[\"PThread\"]=PThread;Module[\"wasmMemory\"]=wasmMemory;Module[\"ExitStatus\"]=ExitStatus;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}if(ENVIRONMENT_IS_PTHREAD){readyPromiseResolve(Module);initRuntime();postMessage({\"cmd\":\"loaded\"});return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function exit(status,implicit){if(implicit&&noExitRuntime&&status===0){return}if(!implicit){if(ENVIRONMENT_IS_PTHREAD){postMessage({\"cmd\":\"exitProcess\",\"returnCode\":status});throw new ExitStatus(status)}else{}}if(noExitRuntime){}else{PThread.terminateAllThreads();EXITSTATUS=status;exitRuntime();if(Module[\"onExit\"])Module[\"onExit\"](status);ABORT=true}quit_(status,new ExitStatus(status))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}if(ENVIRONMENT_IS_PTHREAD){noExitRuntime=false;PThread.initWorker()}run();\n\n\n  return WasmBackendModuleThreadedSimd.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = WasmBackendModuleThreadedSimd;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return WasmBackendModuleThreadedSimd; });\nelse if (typeof exports === 'object')\n  exports[\"WasmBackendModuleThreadedSimd\"] = WasmBackendModuleThreadedSimd;\n","\nvar WasmBackendModule = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModule) {\n  WasmBackendModule = WasmBackendModule || {};\n\nvar Module=typeof WasmBackendModule!==\"undefined\"?WasmBackendModule:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;__ATINIT__.push({func:function(){___wasm_call_ctors()}});function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}function hasPrefix(str,prefix){return String.prototype.startsWith?str.startsWith(prefix):str.indexOf(prefix)===0}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return hasPrefix(filename,dataURIPrefix)}var fileURIPrefix=\"file://\";function isFileURI(filename){return hasPrefix(filename,fileURIPrefix)}var wasmBinaryFile=\"tfjs-backend-wasm.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"i\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"o\"];removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){wasmTable.get(func)()}else{wasmTable.get(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function _abort(){abort()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function _emscripten_get_heap_size(){return HEAPU8.length}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=_emscripten_get_heap_size();var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},get64:function(low,high){return low}};function _fd_close(fd){return 0}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(fd,HEAPU8[ptr+j])}num+=len}HEAP32[pnum>>2]=num;return 0}function _pthread_create(){return 6}function setErrNo(value){HEAP32[___errno_location()>>2]=value;return value}function _sysconf(name){switch(name){case 30:return 16384;case 85:var maxHeapSize=2147483648;return maxHeapSize/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator===\"object\")return navigator[\"hardwareConcurrency\"]||1;return 1}}setErrNo(28);return-1}var asmLibraryArg={\"a\":_abort,\"d\":_emscripten_memcpy_big,\"e\":_emscripten_resize_heap,\"f\":_fd_close,\"c\":_fd_seek,\"b\":_fd_write,\"g\":_pthread_create,\"h\":_sysconf};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"j\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"k\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"l\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"m\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"n\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"p\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"q\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"r\"]).apply(null,arguments)};var _All=Module[\"_All\"]=function(){return(_All=Module[\"_All\"]=Module[\"asm\"][\"s\"]).apply(null,arguments)};var _Any=Module[\"_Any\"]=function(){return(_Any=Module[\"_Any\"]=Module[\"asm\"][\"t\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"u\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"v\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"w\"]).apply(null,arguments)};var _Ceil=Module[\"_Ceil\"]=function(){return(_Ceil=Module[\"_Ceil\"]=Module[\"asm\"][\"x\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"y\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"z\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"A\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"B\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"C\"]).apply(null,arguments)};var _Cumsum=Module[\"_Cumsum\"]=function(){return(_Cumsum=Module[\"_Cumsum\"]=Module[\"asm\"][\"D\"]).apply(null,arguments)};var _DepthToSpace=Module[\"_DepthToSpace\"]=function(){return(_DepthToSpace=Module[\"_DepthToSpace\"]=Module[\"asm\"][\"E\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"F\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"G\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"H\"]).apply(null,arguments)};var _FlipLeftRight=Module[\"_FlipLeftRight\"]=function(){return(_FlipLeftRight=Module[\"_FlipLeftRight\"]=Module[\"asm\"][\"I\"]).apply(null,arguments)};var _Floor=Module[\"_Floor\"]=function(){return(_Floor=Module[\"_Floor\"]=Module[\"asm\"][\"J\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"K\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"L\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"M\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"N\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"O\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"P\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"Q\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var _LeakyRelu=Module[\"_LeakyRelu\"]=function(){return(_LeakyRelu=Module[\"_LeakyRelu\"]=Module[\"asm\"][\"S\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"T\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"U\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"V\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"W\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"X\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"Y\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"Z\"]).apply(null,arguments)};var _Mean=Module[\"_Mean\"]=function(){return(_Mean=Module[\"_Mean\"]=Module[\"asm\"][\"_\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"$\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"aa\"]).apply(null,arguments)};var _MirrorPad=Module[\"_MirrorPad\"]=function(){return(_MirrorPad=Module[\"_MirrorPad\"]=Module[\"asm\"][\"ba\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"ca\"]).apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return(_Neg=Module[\"_Neg\"]=Module[\"asm\"][\"da\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"ea\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"fa\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"ga\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"ha\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"ia\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"ja\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"ka\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"la\"]).apply(null,arguments)};var _Prod=Module[\"_Prod\"]=function(){return(_Prod=Module[\"_Prod\"]=Module[\"asm\"][\"ma\"]).apply(null,arguments)};var _RealDiv=Module[\"_RealDiv\"]=function(){return(_RealDiv=Module[\"_RealDiv\"]=Module[\"asm\"][\"na\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"oa\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"pa\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"qa\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"ra\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"sa\"]).apply(null,arguments)};var _Round=Module[\"_Round\"]=function(){return(_Round=Module[\"_Round\"]=Module[\"asm\"][\"ta\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"ua\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"va\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"wa\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"xa\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"ya\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"za\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"Aa\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"Ba\"]).apply(null,arguments)};var _SquaredDifference=Module[\"_SquaredDifference\"]=function(){return(_SquaredDifference=Module[\"_SquaredDifference\"]=Module[\"asm\"][\"Ca\"]).apply(null,arguments)};var _Step=Module[\"_Step\"]=function(){return(_Step=Module[\"_Step\"]=Module[\"asm\"][\"Da\"]).apply(null,arguments)};var _StridedSlice=Module[\"_StridedSlice\"]=function(){return(_StridedSlice=Module[\"_StridedSlice\"]=Module[\"asm\"][\"Ea\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"Fa\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"Ga\"]).apply(null,arguments)};var _Tan=Module[\"_Tan\"]=function(){return(_Tan=Module[\"_Tan\"]=Module[\"asm\"][\"Ha\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"Ia\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"Ja\"]).apply(null,arguments)};var _TopK=Module[\"_TopK\"]=function(){return(_TopK=Module[\"_TopK\"]=Module[\"asm\"][\"Ka\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"La\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"Ma\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"Na\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"Oa\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"Pa\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"Qa\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"Ra\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"Sa\"]).apply(null,arguments)};Module[\"cwrap\"]=cwrap;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return WasmBackendModule.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = WasmBackendModule;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return WasmBackendModule; });\nelse if (typeof exports === 'object')\n  exports[\"WasmBackendModule\"] = WasmBackendModule;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './flags_wasm';\n\nimport {backend_util, BackendTimingInfo, DataStorage, DataType, deprecationWarn, engine, env, KernelBackend, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasmModule, WasmFactoryConfig} from '../wasm-out/tfjs-backend-wasm';\nimport {BackendWasmThreadedSimdModule} from '../wasm-out/tfjs-backend-wasm-threaded-simd';\nimport wasmFactoryThreadedSimd from '../wasm-out/tfjs-backend-wasm-threaded-simd.js';\n// @ts-ignore\nimport {wasmWorkerContents} from '../wasm-out/tfjs-backend-wasm-threaded-simd.worker.js';\nimport wasmFactory from '../wasm-out/tfjs-backend-wasm.js';\n\ninterface TensorData {\n  id: number;\n  memoryOffset: number;\n  shape: number[];\n  dtype: DataType;\n  refCount: number;\n  /** Only used for string tensors, storing encoded bytes. */\n  stringBytes?: Uint8Array[];\n}\n\nexport type DataId = object;  // object instead of {} to force non-primitive.\n\nexport class BackendWasm extends KernelBackend {\n  // 0 is reserved for null data ids.\n  private dataIdNextNumber = 1;\n  dataIdMap: DataStorage<TensorData>;\n\n  constructor(public wasm: BackendWasmModule | BackendWasmThreadedSimdModule) {\n    super();\n    this.wasm.tfjs.init();\n    this.dataIdMap = new DataStorage(this, engine());\n  }\n\n  write(values: backend_util.BackendValues, shape: number[], dtype: DataType):\n      DataId {\n    const dataId = {id: this.dataIdNextNumber++};\n    this.move(dataId, values, shape, dtype, 1);\n    return dataId;\n  }\n\n  numDataIds(): number {\n    return this.dataIdMap.numDataIds();\n  }\n\n  async time(f: () => void): Promise<BackendTimingInfo> {\n    const start = util.now();\n    f();\n    const kernelMs = util.now() - start;\n    return {kernelMs};\n  }\n\n  move(\n      dataId: DataId, values: backend_util.BackendValues, shape: number[],\n      dtype: DataType, refCount: number): void {\n    const id = this.dataIdNextNumber++;\n    if (dtype === 'string') {\n      const stringBytes = values as Uint8Array[];\n      this.dataIdMap.set(\n          dataId,\n          {id, stringBytes, shape, dtype, memoryOffset: null, refCount});\n      return;\n    }\n\n    const size = util.sizeFromShape(shape);\n    const numBytes = size * util.bytesPerElement(dtype);\n    const memoryOffset = this.wasm._malloc(numBytes);\n\n    this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype, refCount});\n\n    this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n\n    if (values != null) {\n      this.wasm.HEAPU8.set(\n          new Uint8Array(\n              (values as backend_util.TypedArray).buffer,\n              (values as backend_util.TypedArray).byteOffset, numBytes),\n          memoryOffset);\n    }\n  }\n\n  async read(dataId: DataId): Promise<backend_util.BackendValues> {\n    return this.readSync(dataId);\n  }\n\n  readSync(dataId: DataId): backend_util.BackendValues {\n    const {memoryOffset, dtype, shape, stringBytes} =\n        this.dataIdMap.get(dataId);\n    if (dtype === 'string') {\n      return stringBytes;\n    }\n    const bytes = this.wasm.HEAPU8.slice(\n        memoryOffset,\n        memoryOffset + util.sizeFromShape(shape) * util.bytesPerElement(dtype));\n    return typedArrayFromBuffer(bytes.buffer, dtype);\n  }\n\n  /**\n   * Dispose the memory if the dataId has 0 refCount. Return true if the memory\n   * is released, false otherwise.\n   * @param dataId\n   * @oaram force Optional, remove the data regardless of refCount\n   */\n  disposeData(dataId: DataId, force = false): boolean {\n    if (this.dataIdMap.has(dataId)) {\n      const data = this.dataIdMap.get(dataId);\n      data.refCount--;\n      if (!force && data.refCount > 0) {\n        return false;\n      }\n\n      this.wasm._free(data.memoryOffset);\n      this.wasm.tfjs.disposeData(data.id);\n      this.dataIdMap.delete(dataId);\n    }\n    return true;\n  }\n\n  /** Return refCount of a `TensorData`. */\n  refCount(dataId: DataId): number {\n    if (this.dataIdMap.has(dataId)) {\n      const tensorData = this.dataIdMap.get(dataId);\n      return tensorData.refCount;\n    }\n    return 0;\n  }\n\n  incRef(dataId: DataId) {\n    const data = this.dataIdMap.get(dataId);\n    if (data != null) {\n      data.refCount++;\n    }\n  }\n\n  floatPrecision(): 32 {\n    return 32;\n  }\n\n  // Returns the memory offset of a tensor. Useful for debugging and unit\n  // testing.\n  getMemoryOffset(dataId: DataId): number {\n    return this.dataIdMap.get(dataId).memoryOffset;\n  }\n\n  dispose() {\n    this.wasm.tfjs.dispose();\n    if ('PThread' in this.wasm) {\n      this.wasm.PThread.terminateAllThreads();\n    }\n    this.wasm = null;\n  }\n\n  memory() {\n    return {unreliable: false};\n  }\n\n  /**\n   * Make a tensor info for the output of an op. If `memoryOffset` is not\n   * present, this method allocates memory on the WASM heap. If `memoryOffset`\n   * is present, the memory was allocated elsewhere (in c++) and we just record\n   * the pointer where that memory lives.\n   */\n  makeOutput(shape: number[], dtype: DataType, memoryOffset?: number):\n      TensorInfo {\n    let dataId: {};\n    if (memoryOffset == null) {\n      dataId = this.write(null /* values */, shape, dtype);\n    } else {\n      const id = this.dataIdNextNumber++;\n      dataId = {id};\n      this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype, refCount: 1});\n      const size = util.sizeFromShape(shape);\n      this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n    }\n    return {dataId, shape, dtype};\n  }\n\n  typedArrayFromHeap({shape, dtype, dataId}: TensorInfo):\n      backend_util.TypedArray {\n    const buffer = this.wasm.HEAPU8.buffer;\n    const {memoryOffset} = this.dataIdMap.get(dataId);\n    const size = util.sizeFromShape(shape);\n    switch (dtype) {\n      case 'float32':\n        return new Float32Array(buffer, memoryOffset, size);\n      case 'int32':\n        return new Int32Array(buffer, memoryOffset, size);\n      case 'bool':\n        return new Uint8Array(buffer, memoryOffset, size);\n      default:\n        throw new Error(`Unknown dtype ${dtype}`);\n    }\n  }\n}\n\nfunction createInstantiateWasmFunc(path: string) {\n  // tslint:disable-next-line:no-any\n  return (imports: any, callback: any) => {\n    util.fetch(path, {credentials: 'same-origin'}).then((response) => {\n      if (!response['ok']) {\n        imports.env.a(`failed to load wasm binary file at '${path}'`);\n      }\n      response.arrayBuffer().then(binary => {\n        WebAssembly.instantiate(binary, imports).then(output => {\n          callback(output.instance, output.module);\n        });\n      });\n    });\n    return {};\n  };\n}\n\n/**\n * Returns the path of the WASM binary.\n * @param simdSupported whether SIMD is supported\n * @param threadsSupported whether multithreading is supported\n * @param wasmModuleFolder the directory containing the WASM binaries.\n */\nfunction getPathToWasmBinary(\n    simdSupported: boolean, threadsSupported: boolean,\n    wasmModuleFolder: string) {\n  if (wasmPath != null) {\n    // If wasmPath is defined, the user has supplied a full path to\n    // the vanilla .wasm binary.\n    return wasmPath;\n  }\n\n  let path: WasmBinaryName = 'tfjs-backend-wasm.wasm';\n  if (simdSupported && threadsSupported) {\n    path = 'tfjs-backend-wasm-threaded-simd.wasm';\n  } else if (simdSupported) {\n    path = 'tfjs-backend-wasm-simd.wasm';\n  }\n\n  if (wasmFileMap != null) {\n    if (wasmFileMap[path] != null) {\n      return wasmFileMap[path];\n    }\n  }\n\n  return wasmModuleFolder + path;\n}\n\n/**\n * Initializes the wasm module and creates the js <--> wasm bridge.\n *\n * NOTE: We wrap the wasm module in a object with property 'wasm' instead of\n * returning Promise<BackendWasmModule> to avoid freezing Chrome (last tested\n * in Chrome 76).\n */\nexport async function init(): Promise<{wasm: BackendWasmModule}> {\n  const [simdSupported, threadsSupported] = await Promise.all([\n    env().getAsync('WASM_HAS_SIMD_SUPPORT'),\n    env().getAsync('WASM_HAS_MULTITHREAD_SUPPORT')\n  ]);\n\n  return new Promise((resolve, reject) => {\n    const factoryConfig: WasmFactoryConfig = {};\n\n    /**\n     * This function overrides the Emscripten module locateFile utility.\n     * @param path The relative path to the file that needs to be loaded.\n     * @param prefix The path to the main JavaScript file's directory.\n     */\n    factoryConfig.locateFile = (path, prefix) => {\n      if (path.endsWith('.worker.js')) {\n        const response = wasmWorkerContents;\n        const blob = new Blob([response], {type: 'application/javascript'});\n        return URL.createObjectURL(blob);\n      }\n\n      if (path.endsWith('.wasm')) {\n        return getPathToWasmBinary(\n            simdSupported as boolean, threadsSupported as boolean,\n            wasmPathPrefix != null ? wasmPathPrefix : prefix);\n      }\n      return prefix + path;\n    };\n\n    // Use the instantiateWasm override when system fetch is not available.\n    // Reference:\n    // https://github.com/emscripten-core/emscripten/blob/2bca083cbbd5a4133db61fbd74d04f7feecfa907/tests/manual_wasm_instantiate.html#L170\n    if (customFetch) {\n      factoryConfig.instantiateWasm =\n          createInstantiateWasmFunc(getPathToWasmBinary(\n              simdSupported as boolean, threadsSupported as boolean,\n              wasmPathPrefix != null ? wasmPathPrefix : ''));\n    }\n\n    let initialized = false;\n    factoryConfig.onAbort = () => {\n      if (initialized) {\n        // Emscripten already called console.warn so no need to double log.\n        return;\n      }\n      if (initAborted) {\n        // Emscripten calls `onAbort` twice, resulting in double error\n        // messages.\n        return;\n      }\n      initAborted = true;\n      const rejectMsg =\n          'Make sure the server can serve the `.wasm` file relative to the ' +\n          'bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers';\n      reject({message: rejectMsg});\n    };\n\n    let wasm: Promise<BackendWasmModule>;\n    // If `wasmPath` has been defined we must initialize the vanilla module.\n    if (threadsSupported && simdSupported && wasmPath == null) {\n      factoryConfig.mainScriptUrlOrBlob = new Blob(\n          [`var WasmBackendModuleThreadedSimd = ` +\n           wasmFactoryThreadedSimd.toString()],\n          {type: 'text/javascript'});\n      wasm = wasmFactoryThreadedSimd(factoryConfig);\n    } else {\n      // The wasmFactory works for both vanilla and SIMD binaries.\n      wasm = wasmFactory(factoryConfig);\n    }\n\n    // The WASM module has been successfully created by the factory.\n    // Any error will be caught by the onAbort callback defined above.\n    wasm.then((module) => {\n      initialized = true;\n      initAborted = false;\n\n      const voidReturnType: string = null;\n      // Using the tfjs namespace to avoid conflict with emscripten's API.\n      module.tfjs = {\n        init: module.cwrap('init', null, []),\n        registerTensor: module.cwrap(\n            'register_tensor', null,\n            [\n              'number',  // id\n              'number',  // size\n              'number',  // memoryOffset\n            ]),\n        disposeData: module.cwrap('dispose_data', voidReturnType, ['number']),\n        dispose: module.cwrap('dispose', voidReturnType, []),\n      };\n\n      resolve({wasm: module});\n    });\n  });\n}\n\nfunction typedArrayFromBuffer(\n    buffer: ArrayBuffer, dtype: DataType): backend_util.TypedArray {\n  switch (dtype) {\n    case 'float32':\n      return new Float32Array(buffer);\n    case 'int32':\n      return new Int32Array(buffer);\n    case 'bool':\n      return new Uint8Array(buffer);\n    default:\n      throw new Error(`Unknown dtype ${dtype}`);\n  }\n}\n\nconst wasmBinaryNames = [\n  'tfjs-backend-wasm.wasm', 'tfjs-backend-wasm-simd.wasm',\n  'tfjs-backend-wasm-threaded-simd.wasm'\n] as const ;\ntype WasmBinaryName = typeof wasmBinaryNames[number];\n\nlet wasmPath: string = null;\nlet wasmPathPrefix: string = null;\nlet wasmFileMap: {[key in WasmBinaryName]?: string} = {};\nlet initAborted = false;\nlet customFetch = false;\n\n/**\n * @deprecated Use `setWasmPaths` instead.\n * Sets the path to the `.wasm` file which will be fetched when the wasm\n * backend is initialized. See\n * https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers\n * for more details.\n * @param path wasm file path or url\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPath(path: string, usePlatformFetch = false): void {\n  deprecationWarn(\n      'setWasmPath has been deprecated in favor of setWasmPaths and' +\n      ' will be removed in a future release.');\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`');\n  }\n  wasmPath = path;\n  customFetch = usePlatformFetch;\n}\n\n/**\n * Configures the locations of the WASM binaries.\n *\n * ```js\n * setWasmPaths({\n *  'tfjs-backend-wasm.wasm': 'renamed.wasm',\n *  'tfjs-backend-wasm-simd.wasm': 'renamed-simd.wasm',\n *  'tfjs-backend-wasm-threaded-simd.wasm': 'renamed-threaded-simd.wasm'\n * });\n * tf.setBackend('wasm');\n * ```\n *\n * @param prefixOrFileMap This can be either a string or object:\n *  - (string) The path to the directory where the WASM binaries are located.\n *     Note that this prefix will be used to load each binary (vanilla,\n *     SIMD-enabled, threading-enabled, etc.).\n *  - (object) Mapping from names of WASM binaries to custom\n *     full paths specifying the locations of those binaries. This is useful if\n *     your WASM binaries are not all located in the same directory, or if your\n *     WASM binaries have been renamed.\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPaths(\n    prefixOrFileMap: string|{[key in WasmBinaryName]?: string},\n    usePlatformFetch = false): void {\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPaths()` before you call `tf.setBackend()` or ' +\n        '`tf.ready()`');\n  }\n\n  if (typeof prefixOrFileMap === 'string') {\n    wasmPathPrefix = prefixOrFileMap;\n  } else {\n    wasmFileMap = prefixOrFileMap;\n    const missingPaths =\n        wasmBinaryNames.filter(name => wasmFileMap[name] == null);\n    if (missingPaths.length > 0) {\n      throw new Error(\n          `There were no entries found for the following binaries: ` +\n          `${missingPaths.join(',')}. Please either call setWasmPaths with a ` +\n          `map providing a path for each binary, or with a string indicating ` +\n          `the directory where all the binaries can be found.`);\n    }\n  }\n\n  customFetch = usePlatformFetch;\n}\n\n/** Used in unit tests. */\nexport function resetWasmPath(): void {\n  wasmPath = null;\n  wasmPathPrefix = null;\n  wasmFileMap = {};\n  customFetch = false;\n  initAborted = false;\n}\n","export const wasmWorkerContents = 'var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(\" \");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:text,threadId:Module[\"_pthread_self\"]()})}var err=threadPrintErr;this.alert=threadAlert;Module[\"instantiateWasm\"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module[\"wasmModule\"],info);Module[\"wasmModule\"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd===\"load\"){Module[\"wasmModule\"]=e.data.wasmModule;Module[\"wasmMemory\"]=e.data.wasmMemory;Module[\"buffer\"]=Module[\"wasmMemory\"].buffer;Module[\"ENVIRONMENT_IS_PTHREAD\"]=true;if(typeof e.data.urlOrBlob===\"string\"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd===\"objectTransfer\"){Module[\"PThread\"].receiveObjectTransfer(e.data)}else if(e.data.cmd===\"run\"){Module[\"__performance_now_clock_drift\"]=performance.now()-e.data.time;Module[\"__emscripten_thread_init\"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module[\"establishStackSpace\"](top,max);Module[\"_emscripten_tls_init\"]();Module[\"PThread\"].receiveObjectTransfer(e.data);Module[\"PThread\"].setThreadStatus(Module[\"_pthread_self\"](),1);try{var result=Module[\"invokeEntryPoint\"](e.data.start_routine,e.data.arg);if(!Module[\"getNoExitRuntime\"]())Module[\"PThread\"].threadExit(result)}catch(ex){if(ex===\"Canceled!\"){Module[\"PThread\"].threadCancel()}else if(ex!=\"unwind\"){if(ex instanceof Module[\"ExitStatus\"]){if(Module[\"getNoExitRuntime\"]()){}else{Module[\"PThread\"].threadExit(ex.status)}}else{Module[\"PThread\"].threadExit(-2);throw ex}}}}else if(e.data.cmd===\"cancel\"){if(Module[\"_pthread_self\"]()){Module[\"PThread\"].threadCancel()}}else if(e.data.target===\"setimmediate\"){}else if(e.data.cmd===\"processThreadQueue\"){if(Module[\"_pthread_self\"]()){Module[\"_emscripten_current_thread_process_queued_calls\"]()}}else{err(\"worker.js received unknown command \"+e.data.cmd);err(e.data)}}catch(ex){err(\"worker.js onmessage() captured an uncaught exception: \"+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require(\"worker_threads\");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",function(data){onmessage({data:data})});var nodeFS=require(\"fs\");var nodeRead=function(filename){return nodeFS.readFileSync(filename,\"utf8\")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance===\"undefined\"){performance={now:function(){return Date.now()}}}}';","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport './flags_wasm';\n\nimport {registerBackend} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm, init} from './backend_wasm';\n\nexport {BackendWasm, setWasmPath, setWasmPaths} from './backend_wasm';\nexport {version as version_wasm} from './version';\n\nconst WASM_PRIORITY = 2;\nregisterBackend('wasm', async () => {\n  const {wasm} = await init();\n  return new BackendWasm(wasm);\n}, WASM_PRIORITY);\n","/** @license See the LICENSE file. */\n\n// This code is auto-generated, do not modify this file!\nconst version = '3.5.0';\nexport {version};\n"],"names":["CppDType","FusableActivation","wasmFusedMatMul","fusedMatMulConfig","kernelName","_FusedMatMul","backendName","setupFunc","backend","wasm","cwrap","kernelFunc","args","inputs","attrs","a","b","bias","preluActivationWeights","dtype","Error","transposeA","transposeB","activation","leakyreluAlpha","aId","dataIdMap","get","dataId","id","bId","biasId","biasData","shape","length","preluActivationWeightsId","fusedActivation","leftDim","rightDim","batchDim","out","makeOutput","outId","aShapeBytes","Uint8Array","Int32Array","buffer","bShapeBytes","createUnaryKernelConfig","wasmFunc","x","xId","util","sizeFromShape","absConfig","Abs","createBinaryKernelConfig","supportsFullBroadcast","outputType","newShape","backend_util","assertAndGetBroadcastShape","aBroadcastDims","getBroadcastDims","bBroadcastDims","loopsOverAllOfA","every","v","i","loopsOverAllOfB","addConfig","Add","addNConfig","AddN","inputIds","map","inputIdsBytes","identity","inVals","typedArrayFromHeap","set","wasmTranspose","identityConfig","Identity","transpose","_a","perm","newPerm","push","minValIdx","j","reducedShape","permIsNoOp","outShape","inShape","Array","computeOutShape","cloned","permBytes","xShapeBytes","wasmAll","transposeConfig","Transpose","permuteAxesAndTranspose","axis","xShape","xRank","originalAxes","parseAxisParam","axes","permutedAxes","getAxesPermutation","xTransposed","inputWasTransposed","getInnerMostAxes","transposed","wasmAny","allConfig","All","keepDims","inputId","input","inputRank","assertAxesAreInnerMostDims","_b","reduceShape","reduceSize","disposeData","expandShapeToKeepDim","anyConfig","Any","wasmAvgPool","argMaxConfig","ArgMax","transposedId","slice","outerSize","innerSize","avgPoolConfig","AvgPool","filterSize","strides","pad","dimRoundingMode","convInfo","computePool2DInfo","filterHeight","filterWidth","padTop","padInfo","top","padRight","right","padBottom","bottom","padLeft","left","strideHeight","strideWidth","channels","inChannels","dataFormat","dilationWidth","dilationHeight","reshape","xSize","$shape","inferFromImplicitShape","assert","incRef","wasmBatchMatMul","reshapeConfig","Reshape","batchMatMulConfig","BatchMatMul","aRank","bRank","innerShapeA","innerShapeB","outerShapeA","outerShapeB","outerDimsA","outerDimsB","batchDimA","batchDimB","batchDimsCompatible","concat","b3dShape","a3d","b3d","a3dId","b3dId","Math","max","cast","wasmClip","castConfig","Cast","ceilConfig","Ceil","clipByValueConfig","ClipByValue","clipValueMin","clipValueMax","sliceImpl","vals","begin","size","isContinous","slice_util","isSliceContinous","xStrides","computeStrides","flatOffset","computeFlatOffset","subarray","decodedData","fromUint8ToStringArray","inBuf","outBuf","outLoc","indexToLoc","inLoc","idx","fromStringArrayToUint8","values","t","$inputs","filter","shapes","assertParamsConsistent","inputs2D","inputsValShapes","readSync","simplyConcat","outVals_1","outVals","getArrayFromDType","offset","forEach","colOffset","tIdx","row","resIdx","col","concatImplCPU","finalOutShape","stringBytes","sumInnerDims","innerDims","innerDim","outOffset","inOffset","wasmConv2d","concatConfig","Concat","wasmConv2DBackpropInput","conv2DConfig","Conv2D","filterId","dilations","$dataFormat","convertConv2DDataFormat","computeConv2DInfo","inputChannels","outputChannels","outChannels","isSamePad","type","InterpolationMethod","wasmCropAndResize","conv2DBackpropInputConfig","Conv2DBackpropInput","dy","inputShape","batchSize","inHeight","inWidth","outHeight","outWidth","topPad","leftPad","isChannelsLast","dxStrides","dyStrides","fltS0","fltS1","fltS2","xBatchStride","xRowStride","xColStride","xChannelStride","yBatchStride","yRowStride","yColStride","yChannelStride","dyId","cosConfig","Cos","wasmCumsum","cropAndResizeConfig","CropAndResize","castedData","method","extrapolationValue","cropSize","image","boxes","boxInd","numBoxes","cropHeight","cropWidth","imagesData","imagesId","boxesId","boxIndId","imagesShapeBytes","wasmDepthToSpace","cumsumConfig","Cumsum","exclusive","reverse","permutation","permutedX","permutedAxis","permutedOut","finalDim","permutedXId","permutedOutId","getUndoAxesPermutation","wasmDepthwiseConv2d","depthToSpaceConfig","DepthToSpace","blockSize","inputHeight","inputWidth","inputDepth","outputHeight","outputWidth","outputDepth","outputShape","xStridesBytes","outputShapeBytes","outStridesBytes","depthwiseConv2dNativeConfig","DepthwiseConv2dNative","$dilations","equalConfig","Equal","expConfig","Exp","expandDims","dim","$dim","splice","expandDimsConfig","ExpandDims","wasmFlipLeftRight","fillConfig","Fill","value","fill","wasmBatchNorm","flipLeftRightConfig","FlipLeftRight","imageId","batch","imageHeight","imageWidth","numChannels","floorConfig","Floor","floorDivConfig","FloorDiv","wasmFusedConv2d","fusedBatchNormConfig","FusedBatchNorm","varianceEpsilon","mean","variance","scale","meanId","varianceId","offsetId","scaleId","wasmFusedDepthwiseConv2d","fusedConv2DConfig","FusedConv2D","wasmGatherNd","fusedDepthwiseConv2DConfig","FusedDepthwiseConv2D","wasmGather","gatherNdConfig","GatherNd","params","indices","resultShape","numSlices","sliceSize","indicesShape","sliceRank","indicesId","stridesBytes","gatherV2Config","GatherV2","batchDims","parsedAxis","shapeInfo","segment_util","collectGatherOpShapeInfo","flattenX","dimSize","indicesSize","flattenIndex","flattenOutputShape","stridesSize","greaterConfig","Greater","greaterEqualConfig","GreaterEqual","wasmMax","leakyReluConfig","LeakyRelu","alpha","lessConfig","Less","lessEqualConfig","LessEqual","logConfig","Log","logicalAndConfig","LogicalAnd","wasmMaxPool","maxConfig","Max","maximumConfig","Maximum","wasmMean","maxPoolConfig","MaxPool","wasmMin","meanConfig","Mean","reductionAxes","castedInput","MirrorPaddingMode","wasmMirrorPad","minConfig","Min","minimumConfig","Minimum","mirrorPadConfig","MirrorPad","paddings","mode","p","prePaddingsFlat","padTuple","postPaddingsFlat","prePaddingsBytes","postPaddingsBytes","multiplyConfig","Multiply","negConfig","Neg","parseResultStruct","resOffset","result","HEAPU8","pSelectedIndices","selectedSize","pSelectedScores","pValidOutputs","_free","nonMaxSuppressionV3Config","NonMaxSuppressionV3","iouThreshold","maxOutputSize","scoreThreshold","scores","scoresId","nonMaxSuppressionV4Config","NonMaxSuppressionV4","padToMaxOutputSize","wasmOneHot","nonMaxSuppressionV5Config","NonMaxSuppressionV5","softNmsSigma","notEqualConfig","NotEqual","oneHotConfig","OneHot","depth","onValue","offValue","onesLikeConfig","OnesLike","wasmPadV2","packConfig","Pack","assertShapesMatch","intermediateTensorInfos","expandedT","wasmPrelu","padV2Config","PadV2","constantValue","powConfig","Pow","wasmProd","preluConfig","Prelu","weightsId","wasmResizeBilinear","prodConfig","Prod","rangeConfig","Range","start","stop","step","makeZerosTypedArray","numElements","abs","ceil","rangeImplCPU","realDivConfig","RealDiv","reluConfig","Relu","relu6Config","Relu6","wasmReverse","resizeBilinearConfig","ResizeBilinear","images","alignCorners","halfPixelCenters","newHeight","newWidth","oldHeight","oldWidth","xData","wasmRotate","reverseConfig","Reverse","dims","axesBytes","outShapeBytes","reshaped","wasmScatterNd","wasmSelect","rotateWithOffsetConfig","RotateWithOffset","radians","fillValue","center","centerX","centerY","fillValues","fillBytes","roundConfig","Round","begin_","size_","xVals","outData","res","sliceImplCPU","rank","xStride","beginI","beginJ","endI","xOffset","slice2d","xStride1","xStride2","beginK","endJ","slice3d","xStride3","endK","beginL","k","slice4d","wasmStep","wasmStridedSlice","wasmSum","wasmTile","wasmTopK","kernelConfigs_1","Rsqrt","ScatterNd","updates","numUpdates","outputSize","updatesId","Select","condition","e","conditionId","tId","eId","cRank","tRank","Sigmoid","Sin","Slice","Softmax","logits","SplitV","numOrSizeSplits","$axis","splitSizes","prepareSplitSize","s","xSliceSize","xSlice","Sqrt","Square","SquaredDifference","Step","StridedSlice","end","beginMask","endMask","ellipsisMask","newAxisMask","shrinkAxisMask","ellipsisAxes","maskToAxes","numInterpolatedAxes","expandAxes","xReshaped","normalizedBegin","normalizedEnd","normalizedStrides","shrinkAxes","_","indexOf","xSliced","reshaped_1","some","beginBytes","endBytes","Sub","Sum","Tan","Tanh","Tile","reps","newShapeBytes","TopK","sorted","outValues","outValuesId","outIndices","outIndicesId","Unpack","numOutputs","outIndex","outs","ZerosLike","_i","kernelConfig","registerKernel","ENV","env","registerFlag","WebAssembly","validate","MessageChannel","port1","postMessage","SharedArrayBuffer","_scriptDir","WasmBackendModuleThreadedSimd","document","currentScript","src","undefined","__filename","GROWABLE_HEAP_I8","wasmMemory","updateGlobalBufferAndViews","HEAP8","GROWABLE_HEAP_U8","GROWABLE_HEAP_I32","HEAP32","GROWABLE_HEAP_U32","HEAPU32","GROWABLE_HEAP_F64","HEAPF64","readyPromiseResolve","readyPromiseReject","Module","Promise","resolve","reject","key","moduleOverrides","hasOwnProperty","quit_","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","window","importScripts","process","versions","node","ENVIRONMENT_IS_PTHREAD","read_","readAsync","readBinary","nodeFS","nodePath","scriptDirectory","locateFile","path","nodeWorkerThreads","require$$0","dirname","__dirname","filename","binary","require$$1","ret","replace","ex","ExitStatus","abort","require$$2","console","error","global","Worker","read","f","data","readbuffer","scriptArgs","quit","print","log","warn","printErr","self","location","href","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","onload","onerror","performance","require$$3","wasmBinary","bind","err","wasmModule","noExitRuntime","ABORT","text","getCFunc","ident","func","ccall","returnType","argTypes","opts","toC","string","str","len","stringToUTF8","stackAlloc","array","arr","writeArrayToMemory","cArgs","stack","converter","stackSave","apply","UTF8ToString","Boolean","convertReturnValue","stackRestore","numericArgs","arguments","UTF8ArrayToString","heap","maxBytesToRead","endIdx","u0","u1","u2","String","fromCharCode","ch","ptr","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","u","charCodeAt","outPtr","lengthBytesUTF8","alignUp","multiple","buf","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmTable","INITIAL_MEMORY","Memory","initial","maximum","shared","byteLength","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","preRun","addOnPreRun","shift","callRuntimeCallbacks","initRuntime","preMain","postRun","addOnPostRun","cb","unshift","___wasm_call_ctors","runDependencies","dependenciesFulfilled","addRunDependency","removeRunDependency","callback","what","RuntimeError","hasPrefix","prefix","prototype","startsWith","dataURIPrefix","isDataURI","fileURIPrefix","isFileURI","wasmBinaryFile","getBinary","file","getBinaryPromise","fetch","credentials","then","catch","createWasm","info","asmLibraryArg","receiveInstance","instance","module","exports","numWorkersToLoad","PThread","unusedWorkers","w","loadWasmModuleToWorker","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","instantiate","reason","instantiateStreaming","ASM_CONSTS","9816","9834","$0","$1","setTimeout","__emscripten_do_dispatch_to_thread","initPthreadsJS","callbacks","arg","_emscripten_futex_wake","addr","count","Infinity","mainThreadWaitAddress","Atomics","load","__emscripten_main_thread_futex","mainThreadWoken","compareExchange","notify","killThread","pthread_ptr","pthread","pthreads","worker","terminate","freeThreadData","runningWorkers","cancelThread","cmd","cleanupThread","returnWorkerToPool","_emscripten_get_now","initMainThreadBlock","pthreadPoolSize","min","navigator","hardwareConcurrency","allocateUnusedWorker","tb","_malloc","headPtr","tlsMemory","store","__emscripten_thread_init","_emscripten_register_main_browser_thread_id","initWorker","threadExitHandlers","setThreadStatus","runExitHandlers","pop","_pthread_self","___pthread_tsd_run_dtors","runExitHandlersAndDeinitThread","exitCode","threadExit","threadCancel","terminateAllThreads","threadInfoStruct","allocatedOwnStack","stackBase","runWithoutMainThreadQueuedCalls","__emscripten_allow_main_runtime_queued_calls","receiveObjectTransfer","onFinishedLoading","onmessage","d","currentProxiedOperationCallerThread","thread","targetThread","_emscripten_main_thread_process_queued_calls","spawnThread","loaded","runPthread","alert","exit","target","lineno","message","on","urlOrBlob","pthreadMainJs","getNewWorker","busySpinWait","msecs","now","establishStackSpace","stackTop","stackMax","_emscripten_stack_set_limits","getNoExitRuntime","invokeEntryPoint","___assert_fail","line","___call_main","argc","argv","_main","setErrNo","___errno_location","_atexit","_emscripten_proxy_to_main_thread_js","__emscripten_notify_thread_queue","targetThreadId","mainThreadId","_abort","_emscripten_asm_const_int","code","sigPtr","argbuf","readAsmConstArgs","_emscripten_conditional_set_current_thread_status","expectedStatus","newStatus","_emscripten_futex_wait","val","timeout","tNow","tEnd","exchange","wait","_emscripten_memcpy_big","dest","num","copyWithin","_emscripten_num_logical_cores","require$$4","cpus","index","sync","numCallArgs","serializedNumCallArgs","_emscripten_run_in_main_runtime_thread_js","dateNow","_emscripten_receive_on_main_thread_js_callArgs","readAsmConstArgsArray","double","_emscripten_receive_on_main_thread_js","proxiedFunctionTable","_emscripten_get_heap_size","emscripten_realloc_buffer","grow","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","JSEvents","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","argsList","arraysHaveEqualContent","arrA","arrB","call","sort","y","removeDeferredCalls","canPerformEventHandlerRequests","currentEventHandler","allowsDeferredCalls","runDeferredCalls","removeAllHandlersOnTarget","eventTypeString","h","removeEventListener","eventListenerFunc","useCapture","registerOrRemoveHandler","eventHandler","jsEventHandler","event","handlerFunc","callbackfunc","addEventListener","queueEventHandlerOnThread_iiii","eventHandlerFunc","eventTypeId","eventData","userData","varargs","__emscripten_call_on_thread","getTargetThreadForEventCallback","getNodeNameForTarget","screen","nodeName","fullscreenEnabled","webkitFullscreenEnabled","stringToNewUTF8","jsString","cString","_emscripten_set_offscreencanvas_size_on_target_thread_js","targetCanvas","width","height","targetCanvasPtr","_emscripten_set_offscreencanvas_size_on_target_thread","maybeCStringToJsString","specialHTMLTargets","findEventTarget","querySelector","findCanvasEventTarget","_emscripten_set_canvas_element_size_calling_thread","canvas","canvasSharedPtr","offscreenCanvas","controlTransferredOffscreen","autoResizeViewport","GLctxObject","GLctx","prevViewport","getParameter","viewport","_emscripten_set_canvas_element_size_main_thread","_emscripten_set_canvas_element_size","_emscripten_set_current_thread_status","_emscripten_set_thread_name","threadId","name","__webgl_enable_ANGLE_instanced_arrays","ctx","ext","getExtension","divisor","first","primcount","__webgl_enable_OES_vertex_array_object","vao","__webgl_enable_WEBGL_draw_buffers","n","bufs","__webgl_enable_WEBGL_multi_draw","multiDrawWebgl","GL","counter","buffers","programs","framebuffers","renderbuffers","textures","uniforms","shaders","vaos","contexts","offscreenCanvases","timerQueriesEXT","programInfos","stringCache","unpackAlignment","recordError","errorCode","lastError","getNewId","table","getSource","shader","source","createContext","webGLContextAttributes","getContext","registerContext","handle","context","attributes","version","majorVersion","enableExtensionsByDefault","initExtensions","makeContextCurrent","contextHandle","currentContext","deleteContext","initExtensionsDone","disjointTimerQueryExt","getSupportedExtensions","populateUniformTable","program","ptable","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","utable","numUniforms","getProgramParameter","getActiveUniform","loc","getUniformLocation","__emscripten_webgl_power_preferences","_emscripten_webgl_do_create_context","powerPreference","contextAttributes","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","failIfMajorPerformanceCaveat","minorVersion","explicitSwapControl","proxyContextToMainThread","renderViaOffscreenBackBuffer","_emscripten_webgl_create_context","a0","a1","SYSCALLS","mappings","printChar","stream","curr","getStr","get64","low","high","_fd_close","fd","_fd_seek","offset_low","offset_high","whence","newOffset","_fd_write","iov","iovcnt","pnum","_pthread_cleanup_pop","execute","routine","_pthread_cleanup_push","threadParams","stackHigh","stackSize","tis","detached","global_locale","_emscripten_get_global_libc","msg","start_routine","startRoutine","time","transferList","_pthread_create","attr","_emscripten_sync_run_in_main_thread_4","_memalign","_sysconf","calledRun","r","c","z","q","m","g","o","l","this","run","doRun","implicit","returnCode","runCaller","ready","WasmBackendModule","UTF8Decoder","TextDecoder","endPtr","decode","_super","_this","tfjs","init","DataStorage","engine","tslib_1.__extends","BackendWasm","dataIdNextNumber","move","numDataIds","kernelMs","refCount","numBytes","bytesPerElement","memoryOffset","registerTensor","byteOffset","typedArrayFromBuffer","force","has","delete","dispose","unreliable","write","KernelBackend","getPathToWasmBinary","simdSupported","threadsSupported","wasmModuleFolder","wasmPath","wasmFileMap","all","getAsync","factoryConfig","endsWith","blob","Blob","URL","createObjectURL","wasmPathPrefix","customFetch","instantiateWasm","imports","arrayBuffer","createInstantiateWasmFunc","initialized","onAbort","initAborted","mainScriptUrlOrBlob","wasmFactoryThreadedSimd","toString","wasmFactory","wasmBinaryNames","usePlatformFetch","deprecationWarn","prefixOrFileMap","missingPaths","join"],"mappings":"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AG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,OAAO,OAAO,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,OAAO,EAAE,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE,KAAK,IAAI,KAAK,EAAE,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,OAAO,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,EAAE,OAAO,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,OAAO,WAAW,KAAK,GAAG,KAAK,EAAE,OAAO,MAAM,KAAK,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,GAAG,OAAO,KAAK,KAAK,EAAE,OAAO,QAAQ,KAAK,EAAE,OAAO,MAAM,KAAK,GAAG,OAAO,MAAM,KAAK,GAAG,OAAO,MAAM,KAAK,GAAG,OAAO,MAAM,KAAK,GAAG,OAAO,IAAI,KAAK,GAAG,OAAO,IAAI,KAAK,GAAG,OAAO,IA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"}