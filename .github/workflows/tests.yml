name: Tests

on:
  workflow_call:
    inputs:
      node_env:
        required: true
        type: string

  pull_request:
    branches: ['master']
    paths:
      - '**.js*'
      - '**.ts*'
      - 'package*.json'
      - '.github/workflows/tests.yml'

  push:
    branches: ['master']
    paths:
      - '**.js*'
      - '**.ts*'
      - 'package*.json'
      - '.github/workflows/tests.yml'

concurrency:
  # Ensures that only one workflow task will run at a time. Previous builds, if
  # already in process, will get cancelled. Only the latest commit will be allowed
  # to run, cancelling any workflows in between
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  NODE_ENV: ${{ inputs.node_env }}
  NEXT_TELEMETRY_DISABLED: 1
  # we build a dev binary for use in CI so skip downloading
  # canary next-swc binaries in the monorepo
  NEXT_SKIP_NATIVE_POSTINSTALL: 1
  CI: true

jobs:
  test:
    name: Test with Node.js ${{ matrix.node }}
    timeout-minutes: 10
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: ['20.8.1', 'latest']

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4.1.0

      - run: echo "$AWS_EXPORTS_JSON" > src/aws-exports.js
        shell: bash
        env:
          AWS_EXPORTS_JSON: ${{secrets.AWS_EXPORTS_JSON}}

      - uses: pnpm/action-setup@v2.4.0
        with:
          version: 8

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3.8.1
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm

      - name: Audit for vulnerabilities
        run: npx audit-ci@^6 --config ./audit-ci.jsonc

      - name: Install and Build
        run: |
          pnpm install --frozen-lockfile
          pnpm build
